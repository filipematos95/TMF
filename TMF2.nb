(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    284095,       5170]
NotebookOptionsPosition[    279313,       5049]
NotebookOutlinePosition[    279669,       5065]
CellTagsIndexPosition[    279626,       5062]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", " ", 
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"t", ",", "x"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"0.5", "*", "3.6", "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"t", ",", "x"}], "]"}], ",", "x", ",", "x"}], "]"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"t", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{"15", "+", 
         RowBox[{"5", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Pi]", " ", "*", 
            RowBox[{"t", "/", 
             RowBox[{"(", "12", ")"}]}]}], "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["u", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "1000"}], "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"0", ",", "x"}], "]"}], "\[Equal]", "15"}]}], "}"}], ",", 
     "u", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1000"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.659213662362405*^9, 3.6592136996168327`*^9}, {
  3.659213741280911*^9, 3.659213770647789*^9}, {3.65921383006429*^9, 
  3.659213853760178*^9}, {3.659215063521525*^9, 3.659215064509935*^9}, {
  3.659216742531646*^9, 3.659216859738468*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"u", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "3000.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1000.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "3000.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1000.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "5"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{0., 3000.}, {0., 1000.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.659213741960052*^9, 3.659213771875558*^9}, {
   3.65921383249375*^9, 3.659213854563962*^9}, 3.6592141032982273`*^9, 
   3.6592150651207333`*^9, {3.659216770171484*^9, 3.659216803925194*^9}, {
   3.659216853422488*^9, 3.659216865308036*^9}, 3.6592169267911453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"t", ",", "x"}], "]"}], "/.", "%"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"3000", "-", "24"}], ",", "3000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1000"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659213784175235*^9, 3.6592137952586203`*^9}, {
   3.6592139435939913`*^9, 3.659213964705357*^9}, {3.659214056171195*^9, 
   3.659214096786024*^9}, 3.659216811441738*^9, {3.659216907417894*^9, 
   3.659216911574613*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnHdUFMn3t2cIEkVEVFTMg6LAiCCioFImdATDICaMKIJpDKwZIwbMYdQ1
5xxWZV3HnMGIGXV1zDlHQAwwLzPdn67q+i3f13885zl1em4/XdyuqltdlXsP
ieprpVAo3tsqFNYF/6+YVl+hIFvJvOjuU8YfcgvbXqvnk74KNdl+xPmArinl
udsir6/3qU0OfnmkM4ZT3vLs81XWbwLIuer7VJpWlM/8vHBc5ceB5Hb36UZD
a8qzX8/ROxTwF4u66FVaysdPTth18nUAybrgq9FHU75ic+mIxgW/a45V0Zny
id0n915g8iNudW8adF0pL30pLfmfbTVI5UFbdMYelL9uPCE4y68a8d8wRqXp
Tflz5WD/o2EqEvZvpNHQl3KX4ncqfyrgbVwq6VX9KR9o1WZ7sroa6d7sW0v9
IMq969gmTd5eg8SPPWsyDaH80hvt2YACn/Dc/tCWA4ONWjJ4wKEbTwrih2fw
0lcc1u374Cd5Bj/u7X5U88hP8gzeV7M5e8IdP8mzdP1W0d0fFnB4Bn/1w7tI
h8d+kmfwM1N7pgd98pM8g5d0Dgqcp1RLnsFHVZtU+mgJteQZPK1C+61eVdSS
Z/CQC6U8PtdQS57B/5o0tfuCAg7P4I2/ZySUqayWPIN3sL7Tu56bWvIM3rDF
69OPC3zCc73L9yoPNsaS+JYznaYy/Rk8Kr7fxZkFHJ7Br7p5pi4t4PAMPuj0
j187Cjg8g3cd+fPWiQIOz+CPEx3K3Sjg8Axu3fBXjYcFHJ7BD/b8c9UTBfUM
/jwg9JRRQT2DX/yr+PHLCuoZ/M3v9I6HFdQz+CS3Hr02K6hn8F3d3+XrFdQz
eM+Xi29OV1DP4P4OfZtPYfrz2YZPX6kuDCBPR6bU1jKewQ8XyQ3RMp7BT/T7
2lTLeAa/NKp+pJbxDJ53+u/2WsYz+IKLA2O0jGfwqe2X9tIynsHnd5kSr2U8
gwetnjlIy3gGr/sgL1HLeAZPIuXHahnP4AfrWyVrGc/g61qtnaVlPIN32Xtq
kZbxDN5ia7nVWsZzzTtZt3XGYeTO1vnr3BnP4J6jEre6M57Bb+R12u3OeAY3
RjTe7854Bj+6Vn3UnfEMXjKm4hl3xjO4e3m3i+6MZ/B1xW2vuzOewac3y7nj
zngGb+jw/KE74xl8Y5vLL9wZz+B5manv3RnP4ANC9N/cGc/gKcYhP90Zz+DO
cyOVJRnPw+bn1tdEjSRpb/1trBnP4Cv+DihizXgGX1MiyN6a8Qxer2g9R2vG
M/iNNaHO1oxn8OfnwlysGc/gdjOauVoznsHtH2ncrBnP4MaMtu7WjGfwzdqO
pawZz+Ardd09rBnP4HmV+pa1ZjyD5wzUeVoznsHntxlZwZrxLP3u+YmVrBnP
B1v8XqW6MJYkLg9qoGA8g2+JHm/h8Azu2yzdwuEZvFS/og0VjGfwISc7WDg8
gzdvvcbC4Rl8m8srC4dn8A02/o0UjGfwJrXGWDg8gy+Zd9rC4Rl8exXnMAXj
GXzOuw4WDs/gEW/WWjg8g38p99bC4Rl83pQ6RMF4Npn/hU0k5TaUV7KewU98
qqxkPYOXbFZNyXoGr7q2ppL1DP5RUUvJegYf3z9QyXoGv/VvsJL1DJ7XpoGS
9Qz+/RJRsp7BM9o2V7KewSfd0yhZz+BlB7VRsp7B19i0V7KewUts6qRkPYNP
bNVNyXquen9yqs44mXR1f1zQgI7rwG2cBQ7P4O+tBQ7P4CV+P7JweAZPyhI4
PIN7fRA4PIMXfylweAYPeyRweAbf+6/A4Rm87w2BwzN4zwyBwzP46rMCh2fw
yqcEDs/gb48IHJ7BfxoEDs8tDlr3MZaaSpo+z5N5Bnd/nCfzDP7EmCfzDL7j
Tp7MM/jgm3kyz+Dqq3kyz+BvL+bJPINvOJsn8wwefTpP5hnc5niezDP47kN5
Ms/gHfbnyTyD5+zNk3kGX7wrT+ZZuq9teTLPAxdPc9dETSdNnMw3RPMGeA2R
wzO4q8jhGfy7o8DhGfyhyOEZPE3k8Ay+TeTwDD5X5PAMnihyeAbvJHJ4Bg8R
OTyDlxc5PIMrRA7P4M8cBA7P4Okih+f5Q+3OGubOIPOVcs/geqXcM/gSpdwz
+DKl3DP4SqXcM/gapdwz+Hql3DP4JqXcM/hWpdwz+A6l3DP4X0q5Z/C9Srln
8H1KuWdwg1LuGfygUu55X+TMUaoLs8h7SwKneYPn8MxzeAZ/J3J45jk88xye
eQ7PPIdn8Lcih2eewzPP4Znn8MxzeAZ/I3J45jk83/F2qqG3mUt+c555Ds88
h2eewzPP4Znn8MxzeOY5PPMcnnkOzzyHZ57DM8/hmefwzHN4/mEz954pbD5R
KOR5g+fwzHN45jk88xyeeQ7PPIdnnsMzz+GZ5/DMc3jmOTzzHJ55Ds8831Bp
o9HQeCuZubDRsyHGxqTek4T5Sc5qsrfjSL2qOeV7FB039QxSk5NzNBp9S8pL
X71e9Vx7NXmY+8mga0v5uGW9Xrfppibv1Wd0xijKyxwYtfR4MzX5HfenStOR
8l8jTtfdUlFNHFf2Nxq6UP78r9+remT5kbLXG+hV3Slfv+9l3bGX/Ii3natG
34vybuen9HX7y4+E/2Ew6BIo/6Nv/SqzNvmRjttn6owDmOu3XRdR9qgf6f2o
m0ozmPJLta7PC3jiJ/nBOuc/ldzn2pf3l/oh2gftDq2TVpnmYfDINg7hy3No
HgDPikrdEh1OfeL6vde7zRk9OZBcOe2pUETS9q1avB+0K1YtcbSfW3P8UD9F
Hck/eKvcT8+jJ9P1Z1ynU8r7OUuiaH8GLz4tr8yYQNqfwTunJLQijrQ/g+en
nwsp+YjmDfDwRY0NUw/T54J4nt487+OapyL1Gj4zmfow/SThdabvWj+Jo/2E
4C/lNpmqSs8RfEfmoM3ReXS9GtfR/jq+tOlummfAw9b3eNjzMn2+uE5Qkm2V
RWd9pL8LtJ94JKnWnzn0ub8ulaHUVJkneGHeszzH9cFtOF5YXsLvZq8YvM65
O80D4Puy5u3N2EjjKezvmv9d5DdcZ3+XE36DYmk+kfpDTP0SugL/Fdp/1BkL
7iu78eCQRGNt8nGrauvttmpS7WMnjb4J5cWW38v9YlKTBicWGw0tKLd1vJ7w
ROtPmsXkG3QaykcfPvXUeqw/ifEJ1ejbUF7EpeaoCeP9Se+zm1SadpR3CfUs
M66TP9lUv6vR0JPyw8XXl93TzYfsykwz6GIp35+xYXi8sw85vVmp0cdT/mZg
ibtDbX3IRTJQpelH+b/X574brfUhj4tvM+h0lNc7nTJF/96XPN9VXK8awsRZ
ct2W1JX0fQTeVVPZaW+2H4lacF1njKR8zc/3VnEL/CWO/la39O9nnrmB5Kjj
Mp0xjrYf2PnEuq2Pakoc7ffrP1c6V0wlxQP+96nbTmee+ErPC3z+p/vLy1es
RVplJ+hVEfT67/Vuj4Lm+5N/hqj1qj6Ut/7LeoLN05pS/wHPzdozem027Q+f
5/oOVqXOI0XFfoV4wF1EjvcF4rnzIOVpmwoBxHfmKZWmGb2+/6iM6NYba5E6
Kh+FIpzyByHhrS56+EvvC1zHwdahgUvBdfrFFvxSFG3/x2DVjIaV/MnQ36OM
hvaUz4q4m1dlfy3p/YLrZPTsUOaApz8ZvfSJQdeBtl+/wP3a7RK1yKSACL2q
E+W9E/o5pMXR9xGuc+thuPZ7ug+ZfvkfnbEzbT9gZ8jZlXv9yLx+FTT6GMon
lrK5OlZB31+4TlHNflP8merkT+sZKk032j7jw8SWXt19yZo1X0ym7pSPT8lc
9e8VH+n9heuk9wzPfVpwnRvGTJOpP23fN2NM5c8nfMi9kY2MhoGUn6v6m7SN
8JXeI+DfL5b/1l7vL+Vh8N3HG4aeM9aU+kNh+YfvD+iHiLPdgm9+1Qv6P/qh
lM9rN3izr6Cf4++rsP7G/y7if1pj93ivCzFk6/Zjp5uUpxz1sqSOVaetu03f
L2i/fvRWRYfnlKN99ddhCVdq0vEM2pc5U2Lq+zKUo/3f65KGehvpeAPtf1Va
a73zFeVor91Tu154NbWUHzyswrdXu9CKhPqmJfQ2+El5ALyIqVPUlVZqKU+C
J4zd5rPyjJ+U38ATp2ytuaQhzf+Ix9e+5a8WnvR3VwzbUbZVVEcS7TQtoKMr
fS+g/Yqf3fa3fUHjQftOj0LXhnzxk/5O0d5zTM3wVcXp+Bl8ePZp0qYUjR/X
+fJWc21sUbXUn9G+xj3i+OsTnUeAO9XwCtG8o/eL6/xS90svmUXjgecZGXEX
KhX4R95A+39b2DkXdaK/i/ZR+7yWtC6rlv6O0P7Fu3vhUwrGA6+iAxQKpn69
8VTP+B8FcSKPSXVkffGg50/9yORvVRUKDdOvHrgoBt7zI+X0JRUKZpy2q04n
V6vlgVKc0vinab3hCVMCyH5/O4WiA+Vp7luPr3nlL3Fcf3tQ2ZuTCp6LlTh+
A3cV69ptr+aaTDGUe53JiRlZ8LxWiXkGfGevHk1nV1CTN7qCGXIvyiP6X/az
qa4mU5zvm0zxNJ76fVKa/bqsItdEb+BhtS5eC/hRjZTfedlkYvYPxDZLf57u
X1PiuP6/PncHfyimljyjDrs4eY6buX4Nz+B7qw8JXlzA4Rl84bqXJzYy+QG8
j+fPfvsLOPyDFy35eM/ZAg7/4P1fpFe4VcDhGTxmfZtl5ro2PPN1bXgGn7hs
y7j7CuoZvHix+42uK6hn8IY9k1efKuB1xbwEvt9Ob9yjoP7BU11uJq0p4PAP
fvdEyaz5BRyewQ+9vRJrrnfDs1SnzrpQX8t4Bm90bV9jLeMZvNqNChot4xk8
rnxOWy3jGTzTq15HLeMZ/PKunK5axjN488zoWC3jma9rwzP4yczzA7WMZ6mu
fbnXMC3jGbxx0rBRWsYzeJljxSZoGc/gxSo1nKZlPIO7PH81R8t4Bg/+9H6x
lvGMOmxg+T+3uDOewVWr1uxyZzyDL7uy/W93xjP4pewDB90Zz+CrX5w/7s54
Br/leD/NnfEMvjnps6WuDc98XRuewWtU8LDUteEZvNgy7wfujGcpnsygZ+6M
Z/BrC8PeuDOewYv8av7JnfEMnrpBk+3OeAY/OCzilzvjGXXYtWO+2loznsG7
J/1jZ814luran0Y6WDOewW1v13eyZjyD11fnWera8Az+4ftJS10bnsFfBUyz
1LXhma9rwzN45WLFLHVteAZP3JtZ0prxDF7xzIrS1oxn8MgWsWWsGc/gZRt6
l7NmPIOv2vTJUu+GZ6mOP/6Apd4Nz6jDhnUfbqlTwzN4q5b7LByewdfEfG3A
jt+k+vLi2pZ6NDxL188eauHwLF1n/F4Lh2fwBL/PFg7PfF0bnsE/Ogy1cHgG
P1l3r4XDM3jl2Z8tHJ7By9rVttSp4Rn8nx3DLByewbNG/G3h8Az+ot83C4dn
y3Jo2ETiGC/Ur+EZ3KT2UrKewfN/eytZz+D213yVrGdw1TZ/JesZvP20OkrW
M/iKhHpK1jM46trwDN65gVDXhmfwO+pmStYz+LhqLZWsZ/DWVSOVrGfwCK92
StYzeJJvtJL1DP64Xmcl6xl12GJFhTo1PIN/tRU4PEv1btMjC4dn8Ba5Aodn
8CNfBA7P4L3eCRyewYNfCBye+bo2PIMn3xU4PIPn3hQ4PIOvvyJweAafcEHg
8Aw+P03g8Ax+84TA4Rk8Uqx3wzPqsCvE+jU8g3+8nyfzDB52N0/mGXzOrTyZ
Z/Db1/NknsHLX8mTeQaPFeva8MzXteEZ/KFY14ZncI8TeTLP4G2O5Mk8gycf
yJN5Bk/dlyfzLP3unjyZZ3A7sd4Nz6jD+op1angGLyVyeJbqvE7y+TX4O7H+
C8/gmSKHZ/BjIodn8M0ih2e+rg3P4CNEDs/gPUQOz+DNRQ7PkgeRwzO4m8jh
GfyHWL+GZ/BHIodnvn4Nz+CLlXLP4EuVcs/gy5Vyz+CrlHLP4GuVcs98XRue
+bo2PPN1bXgG366UewbfpZR7Bt+tlHsGT1XKPYP/o5R75uvd8MzXqeGZ5/DM
15fhmefwzHN45jk88xyeeQ7PfN0ZnnkOzzyHZ57DM8/hmefwzNe14Zmvw8Iz
z+GZ5/DMc3jmOTzzHJ55Ds88h2eewzPP4Znn8MxzeOY5PPMcnnkOz/x6Jjzz
HJ4LW//kOTzzHJ55Ds88h2eewzPP4Znn8MxzeOY5PPMcnnkOn2kHNM5WpC15
HvVkZd9s2m+xLmpwD9ob7Uh9Kpo0CY+ICidP/gr32F+H3m+Ff8T1Om7dLGuP
cH3S8tHB5070fkd/bW65/qvXnp+u5tB+FR8mXD9ihvcNTQZ97jcfltEcONaL
3JqeeGk489zvP059rCA9ybrJd3Y9/EX/vorb+NdaZNOdnNtmPbVaFv27eL3A
u//9UtGkfK9wMpBZ91t9UVjn2cevR90Xftdx8NhiX5nntcUo/O7vCF30TFv6
vO7n17L87vY3Pxc3KUrz88r5wu+WSvM+oXSl/mPbVi42eGd/8lntuKQTc1+/
e/Wqe2BuP6J6Pb9vT6Y/L01c210xNIF8GOby90CmPwdMfThVExVP9je5XX0C
058zlpTfpa/Tl3zK3pTwJ9Of+23tdtNYKo44vBv0PpXpz1aHVv5U/ehNlpA5
CzOY/uwTWsg6UqQQ//Sg2Yl9GD+xPYT4NwTMLTKc6c+/hwjxj3mzrMQkpj8v
nSzEry0X934a058DFgnxz0mp+3ka058vbxLi7/S10qZk5j3Y7aAQ/7jj6b6T
mH7+vefiAfrIYaRk6f31PBnP6a8D8w3HhhJnxaTrVRnP+mE3FxrVQ0mq4cwA
H8bzyawXrRRkCElzqmMTyHiOKeKVqKkymGxJSlodwnjOKR23XG+jI7V7dqjb
hPG8oMbGk8aXA0lLp81XNIznB7f+ex1pRw8h/uqvzvX3ZDyPfiXEHzq4tZWK
8dx8qBB/2aknVvgwnr2+CvEfnZUQGMh4PmktxP+r/rKMEMZz15JC/PcGL4pv
wnh+6y3E/8npD2UrxnMjj2WXdWdGkCbaCfVtGc/O64Nj9XVGkAmDbIbaMZ7v
1riTZdg8nCTapW11YDxv/XvkDGOp4aTTiOOPnRjPw0NLeSpm/EEuuWSXdWE8
N0nbv0f1I5HoN/fr6Mp4Lta6Q1PNgETSvmSZRW6MZ9W8/15H+lJKiH/4iJcR
tozn42uF+Lu3OT7djvE8x1uIP/fV1dMOjOeYVCH+a8FlFM6M5+ohQvwr/JY1
cmE8Z50W4v8jLGKCK+P5aKQQv8/d2ifcGM/Trq3014SMJQPO/bGEfQ+27xKa
pts5hpxfW+kT+x6s9PReJ73nGNK/ZQONkvH8ccDYd4a5o0nmy7MblYznI9/K
TDTmjyIN153MVzKeZ4475KYYOoosWV4jxorx3NG2yxbVk5FkxXelwYqdp4T/
9zpSvatC/KHNvy1j34NFOgvxV3/olcW+B28+FuJvmXWurZLxvK6/EP/iXXd3
KhnPg78K8Zf17WpvxXgOTRLiz14a2deK8Wwtxl+r5O7TVoznjBlrF6lSJ5Ds
uKn2rOcVxcOqa6pMIPXtfxdjPSeseHhYt2g8KbJ6aml2vBFUdUIbvc14klyn
QkV2vGG1q/xTw4hxJPPR+WrseONanWMjjC+TSI29U9XseGP1sW4Ois5JZJ9B
W5cdb/ydb/rPdaSJKUL8zvse2rOeI12F+He00LuynssuF+K3r9DJgx1vvK4s
xN+7hV8ldryxf4cQ/7dMd292vJEcKMSfd6eoPztPaSXGfybWox47Dpm1TvvL
tGgyOXfcTjau+xxXubk+cjJ5MsFfNq7rVOPLPJXtZOLeKUY2rjv+4eS/hmOT
yFXNNNm4zuvvBVU0IyeRKV1SZeO62SN7DTKqJ5ENMx7KxnXPRxTwKxPJhrvO
svW6ccb/Xkd6tlaIf2yCk2xc10qM/6JrPdm4LtVbiH/bg76ycV1pMf751xbL
xnUTUoX4896lycZ1L0YI8Q8LyJHNBxeK8Q/d4i1br9s97uYu3dUpZHW1n7J5
invjjTmmlCnkbUKObJ6SZPsH0ZMppOm2r7J5ytMLTWapfiSTk68+yuYpLee5
ZRpSk8mEau9k85Q9UU/LawYkkz/jXsnmKaVK/51grJJMqm54JpunrDvw3+tI
dmL8X2x/yuYpg4kQ/55mObJ5SqaNEP+35K+yeUqoGP+9kx9l85QNc8X489/K
5in2Yvz5oa9k85T3pYT4E8c8k81TbnTu0MPoOJ1EnpXPB+uV99qmOzONaCfJ
54Nrn2R9MSVNI23ry+eDRbakherrTCPNvuTLPA8asHia6oP5u4x8meeb6rir
hs1TiXOPfJnnkG+BZTQ9ppKHbvkyz2mL/nsdyUeMP/eUfD6o9xTi7zhaPh/M
fSzEv8VPPh/suVmI/8WTfJnns/2F+EsuyZd59hXjr90iX+bZVYw/JFe+XpdT
504xTfgMct5KPh/s9mNLF2N+CvlpLZ8Pnjk2cqPuQArxspXPB2smh38wDUkh
miLy+eCC8FLBeu8UEm8nnw9+d3w5SfVkOkmyl88He1zdf9GwfDqZ4SCfD74e
8t/rSG3F+NOs5PNBQ64Q/31r+XzQU4z/g418PjhlshB/tq18Pvi2uRB/dhH5
fLCdGP9H8b7guY4Y/0N7+TyxbPEupwyTZ5FKCrnnSbe8nTQhs0hHhdzzq+W5
0cavM8lshdxzmx7n1+h2ziSnFXLP/1RZ9trUZyb5oZB7LvcqIUDvOZPU5tbr
kncGj1PdmkEGcOt1zoWsI/3hKsRfmZt338sU4u/CzbuJGL+em3dv7S7En8HN
u13E+Itw63XDXwrxN+bW6zqL8Y/j1usafbiXqDo2h/zk1pE2pe44ahgxh+Ry
60hOI8cW0ajnkBxuHSkxpFU748vZ5Bu3jvRvfpkVurWzyRduHSnszJtnpk6z
ySduHWlLyiE/vets8oFbR/IvZB1p6Xt5/PCcv1eI/zu3jhQ3Qog/m1tHulRf
Hr80H+Tih+dlp4X4P3LrSOPE+NEf4DniQjeVPnceUXL9+Zy4j87EeVZH/T5g
6D+P5HOel4j7h8Hh+fe9lRHGe3NJHue599qBS3SLKIfnC31CH5ki/u96XVQh
60iHzgvxI054rsTFD88pWnn88PyxpDx+eO7AxQ/PR9fI44efLudGKGpcCCHf
1uwY/mpjLcnD7tUCj+oe827zTspDo4V1np1TV6cHhNK/99Z2wrpTn87Xrsx0
o3/vF9OEdaRscvCJ9he933UDhf2WleYI+zxxv4hneesSuqPdfKX7Qjxr+24Z
nxdN+e2OQjwbfJ1TL6XT+/1QSojHfpPh7vKPtF/FnRPi+XPerQ85tvTvF/u1
Tk5vNOnXK3+JY9/4t8NFnBI9aX8Dv7F9ite9hjR/4jpWIwLOV2H2uaF9g4oB
bjsiqB9pX/opdexUNc2H4HHi9wjoP+A2ig6LEp5Tn+DJVRePNJ2m/QfxXK/4
1ffIZZXUf/4ZJ7T3iBW+RwDvsUXgFfoJHD5x/Vmb93xR76c+wTObJc2KvkH/
TqfFCX8X6J9oP7vPf/PmF+V/1+CFrQ/jdx2tfiR7dKT5H3zUovDckzvofYFP
Fr+/QH8Gv9zyYP0/u9P3Avi23mMeNtlI72v9gcuvRxork7M/7sdf7kD7SZlt
Qv9UqWaXMi6gcVYZI7QfWXtA8PG82tLvjsoQ+CaT8+7+ptpS/GgfciGo3REb
byketG9fnZzorfSW/LSOE3jSiHCTQ4SPxNOuC/E0D/zm/6Mb9aBQ2NecUNAf
5rUQvjdBf0Y/cY0yhG2fEiD1Q2k/eQ/hXCb0W8R5P3dBlz9j6P5M/P3edHDI
3rqR9meFYu9tyzlR4vlO0vpziuD5NNfP8btNtH3r2vrXlDg8pA5/vm1ptI/E
kR9CP7ywOT+E/l3gOg/OLl/5V241Or/zEPJP0QlC/kE/B084IewnB0e+enlN
4PCJfePHxH3j4PjdjeJ3PeCjKwr7e7+K+7HBI+sI/DTHsV+0mrhPW+q3LX0z
DsztTM4/7/OznwPloU7C+rlxyNzO60tQjutUvJT6rsM9+r5o0EK4jscYjxhV
LuUznIXrDH5wZcWbD5TjOjv6TD/lUZ1eH/uWe2Y+jp1Slv4dgccudfF3Z/Yn
pz0X1uF/ZC/3D3ag7xG01xwY2TS7BB2PLX4vtM8v96dNi1yal9B+iTKwyoYP
9PqIs+6zs68OP6PtpX3pHcZM2FeeXr9WgrD/ueV7Yf8zuO04gV8S90Vj336P
w8J7pG+fuXvm59HvYb2fCnE2PXktLPMXbQ/+ul2H8V0V9PtN8AiPe4HNcul3
suA1N8X97JlDv3sF/9Ym03X4b/rdK/hVx0annZlzvcAvDMm4vciWfo8J7uDY
+2BVB/odFnherbLn7Jzo95Xgq3V9g7/Z0O8gwPf9m74pRkG/V13wh1AvWFTz
9NB4Bf2ODHy4V8umcYwH8Gn2T3eZ6yPwAH5uUeWPiQq6zx+cbJmbNlZB9+GD
736zZcNkBf3uD9z9kqeveT8wvIE/TLo4NkVBvYF3CoqMNNcv4A18cIRXMXOd
At7AVSn3M0Yr6PcF4NY747KHKuh3rODp10NLDVBQz+Arn++dbT6vD57B832C
G8Qxnp1zhLrAu0ZBX9jz6MC7z3d6E8B4BtcEev0IYDyD34w9pghkPEvXSf1s
F8h4Bm+vT3cJZDyDRx6MLhnIeAZfFpRWLpDxDP7wc1iVQMYzeMi3z96BjGfw
+S2yawUynsG72sUEBzKewaed9ggLZDyDf073aBHIeAavWbZO20DGc7MGwvr/
wLk/HV0Yz+CfK723dWE8g5teOLq6MJ7Be2SWL+nCeAaPmxhoqY/AM3jTKREV
XRjP4LVs+6pcGM/gWx9OqOHCeAbfcmep2oXxLP3u892BLoxncBJzpp4L4xl8
fPFbDV0Yz9L9DnrexIXxDL4j/GsLF8YzeN8zpkgXxnPyeGGdv3zX9PZWjGfw
oaUCoqwYz+CnK3bpYMV4Bv/c50NHK8YzeP3qyZ2tGM/gDfqXttRH4Bl8T42/
uloxnsGH9Gva3YrxDD7C614PK8Yz+JNew3pZMZ7BH5V16G3FeAZf3359HyvG
M3iEU4ilDgLP4K8b34y3YjyD9/w+qJ8V4/nkcWE93+F18SAFwy3jcub8KPhH
+5QVN+qwHO1xDhWeC9rXiNMGsRzt+XOo0D7XZWEQy9GeP58K7Se+vhbEcrTn
z61C+4zPrnVZjvb8eVZo/7G6UK8BR3v+nCu0/zB3YV2Woz1//hXa361yoy7L
0Z4/Fwvtj750C2Y52vPnZaH9prvtg1mO9vw5Wmi/5tfiYJajPX++Ftrvj7wd
zHK058/dQvvsjNL1WI72/HlcaD9oXJd6LEd7nNOFfrtGrEMltbRXsP0TvMRZ
oT6Ffgj+5ZLQHv0NfEQ7BwXbr8Adbgsc/Qd8bzdHBdtPwAc8Fzj6A3iwTqg3
4bmDl/kucDxfcLdkZwX7HMGruhRVsM8LvPVKgeO5gC+s4aJg/YN/OihweAYf
qCmmYD03FOtNrgOFeg08g2uGChyewZ/3FTg8g6f1Ejg8g6d2FTg8g+/qKHB4
Bv9HK3B4Br8QKXB4Bn/XQuDwDO7ZVODwDB7TSODwDL61vsDhGVwZJHB4Bu/v
L3B4Bn/iI3B4vi/WlZShJpln8A0NTDLP4D3EOhQ8gx8ONsk8g7vXNck8gw+q
Y5J5Bj8VYJJ5Bi9Z2yTzDJ5QyyTzDH5QrDfBM7itr0nmGTyqpknmGXyVt0nm
GfxFNZPMM7ivl0nmOUmsH/UQ6yzwDN5f5PAM3l7k8AzeUuTwDN5Q5PAMXlvk
8AzuJXJ4Bi8jcngGLypyeAZXihyewbPEehM8g78SOTyD3xM5PINfFjk8g58Q
OTyXrSrUWbIUcs/gXxVyz+A5Crln8O8KuWdw1KHgGfyXQu4ZPE8h9wxuUsg9
gyu489DArbjz0MBtuPPQwFFvgmdwe+48NHAH7jw0cEfufLlDYj3os0meN3gO
zzyH50NcXQmeeQ7PPIdnnsMzz+EZHPUgeOY5PPMcnnkOzzyHZ57DM8/huXOc
vO4DnzyHT57DJ8/hk+fwyXP45Dl88hw+eQ6fPIdPnsMnz+GT5/DZmasLYP0c
62mPxf3MObNsD+jCKT+8RlX3apYfsT31r86oofzGAH/lwhw/4v59p0rTmvLo
0Dm9K53zI1X9JhoN7Sivfvi1R+51PxLQJ0qviqa8y8IXP5baqEk7cT0ZPErc
/9zTNsOg60H5L+t6l8Y6q8ng0LU6Yyzl1g6JOw86qsn4YYkqTV/K74V97FQr
RE3mbG1uNPSjPKZhiKZTLTVZ+cBDrxpE+ZiODg/2/vYjm0u8b6kfQnmvyU+D
gnJpfRnrb+vFfdRNxfOIwBXdFLuicum5PeBK126RymJqEiueUyGt+62Y17Zn
UbV0zgy4q9GtXkMHNVktrp+DZ4v7qHFOEXiv5m9qlixof0Q8TwN8QXqy//iv
9FwL8PZhzZUVC57vXfH8FvBmj99+JAXx41wU8EMpp+Z8tqF1FqyPYX/1ghrf
DbpIZv2w9+Wv5vXDtT0v6oxtKf/d6tR58/rh7iWrVZr2lIdXTN5iXj98K9Zl
wLH/+cfGYwZdHOXvNly6bl73s7+3QGdMoHzxrbM/zet+pV3jVJqBlHfWfiln
XverGh5sNAym/HOFmQvN636oU2M9CvuWH4jnsYDPdOnvZOY4DwT8xrdGbmYe
LNYRwLF/GOe0gBcPuRhi5h3Ec0LA3RelNDHzWPFcL/C/K6S0MnNPcf0f6znY
3+tz/rVBF0V5u4iilcx8mlgXAMd+2sVN9hh0AyjPPbW1qZmvG52sM+ooT8zc
39LM+4vr/FjfwL5WnGcCjv2ij8Tzr8CvGl/Es+sh/LrH/2+9orB1icLWHwpb
ZyhsPaGwdYPC1gcKWwcobL5f2Ly+sPk7P0+vINYZMU/HvtDC5unI82u4/aLI
8+DxjYX5OPK8NH9PFzjyPPg1jTAfR54HX3NV4Mjz4BM6CvNx5Hlw7P9Engdf
+kXgyPPgl8cJ83HkeWn+7iDMu5HnwSf9KXDkeXCFlzDvRp4HX/2PwJHnG3L7
PJHnwY/0FjjyPPjS7gJHngef3FngyPPgY9oLHHkeHPszkefB74cJHHke3CNU
4Mjz4L3qChx5HvxAbYEjz4OX95Pva73P7bdEngffKc5zkefBbcR5LvI8eIw4
z0WeB8d+SOR58G8+AkeeByfi/BR5HnyWOD9Fnge/Kc5PkeeTuH2MyPPgjUSO
PA8eIHLkeXDsJ0SeB38tcuR5cKPIkefBr4gceZ6fZyHP8/Ms5Hl+voM8z893
kOf5+Q7yPD9fQJ7nx+fI8+DY/9btfYkDOqZuW9n+RWN7azUZWOWVzsiMP4/d
81y/pqD92M6HVZoWzHhSb12qf8F4zID9oiIv3ljY15Qef8+g60z5zKwtrZvk
+5HMVX/pjF0pP3Why9qdSjV5dmOSStOT8pqaR7cf29C8Cp4o7lPCewq8Ynip
9AM/6bwDPPKPIyOdf/iRmfPmGg2tKH9oP6q94086vwBv+uBu9Re/6fwC/I5N
yopw5n0E/nKH8tBha/o+ksbPLlG99EXo+wj8+RGXgQ3t6fsFvPnoC9/62ND3
C/jVtwcbWynpewS8tapohXl59Dny8wjMc3kOnzxHvuU53u/43QurO/V6mkvn
R+AemXUaJdjT9z44cRlyvfFPOm8CL33gyyw7OzWJEM8JxDjW0dD1UY4LHe+h
/R59yYl9ftDz+sB/2+2wemlHz+UD3/xwuEviL3r+HvjdVfsC7tjS8TB411N/
jJx81o/8FPMb+NJvl7pdKZinrBPzJ/icom5XYq/SvAfee/mg1A+1qQdp3B62
/vUUFzreAJ87/cGsnwXjf/xdg+eL+0DQP6X9D3Ve+i1wouM68HfiPhD0K/Cu
TWd4fsym5+MhTt+UNw1m5NPzkMFHxqSdPmmlJo2Xe2n0nSifH+9Rx70gHi/x
PFhcv8vWcRnm7zoniudngv/adn7LyN/0PExw/+2HutsX9Oc+KeP1qiZ0nN91
olpjruMnHmun0Ten/PbWHiPN+yWOXRpqNHSk3NjmWi3zvoUMZTO9KobyavHz
Jpj3LRiDS2v03Zn5xYPoduZ9C+vFc3QxbjfljHtvrvvj/FLwcKttWWZ+Qjyf
Gbz1veW/zfyXeL4ouD7giod5/I/zQsEdrzaoaOZlxPM/wevfNHiZOc5JBn+/
pK+vmT8+dF6laUzH+Y8v7SpiHud/+rTSaGhG+eVhR5zMPN9riF7VkvJl1hmW
OnvRbk00+ghmHlHzkaXOHpJ/RGfsQPk12+peZq6pM1+l6UL57dKNa5p55wG9
jYZulA/TxNQy84R1QXpVLybOecPqmPnI2/YafR/KpzWcXt/McY4o5h0NbZtZ
6td+4jmx4KaOdyz1bpwzDH7Ue6Clro28AV5krMlS18Y5w1I9utViS10b576C
+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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1mgf8V9P/x++553OtSPlVpKRoGalEg8oommiXBkkDFckekYxSEgopRClZ
2RSSRMpORqmQFJGRyh7/58vr/B+Pbud5z/fc+zn33PPet8aA87qcm2dZdlTM
Mv5l5fjvR9rf6Xy2yLJraVeWsuwZeAz8Afw0fA28Ap4Nj4CXwBdx7clc+zL8
AP3n0f8qfAvcAZ4HT4G7wk/Bk+Eu8JPwbXBn+An4Yu5zCvdZBGtyA+BHAtcw
ZjTn79O/AL4b/gSeA58PvwY/BF8MvwE/AV8Fvws/CI+EX4efh6fAH8Fz4Qvg
pfCN8FHwg/AFzOEkfnch/CL9D9C/Gn4BngWvgp+Er4bfgyfB7eHH4JnwUPgV
+Ga4HfwovAh+Cl4Hvww/Cq+FF8KPwGvg9fDX8D/wdPgMeAG8Ad6sF0W7keM7
OKf9nOMr+C+tFXNuw5AX4S/p/4b+f+Gv4G/hQDuNoz88n/5LGN8p8zzvpn8A
/S/At8O94KfhiXAr+BH4Jvh4+GH4DvhU+Bn4Tri39gs8Fe4DPwfPgM/KvYb3
wGfmntvD8CXwMvheeAj8EnwffHbu/XM/fE7uPfAofBn8Jnwhc+6Yefw8+q+g
/229a9op9H/GPnkSvh3+HL6LMadz/jxjHqedTP86+m+BL9RehZ+Fp8Eb4Ofh
u+GN8KzC+28x1x7O+e/078rxHH3Tab+ibz58D7wJfl1rA2+Dl2rN4O3wG3r/
8A54Gnw1vAyeCo+Cl8J3wFfAr2nO8FXwG/Cd8JXw6/Bj8K3wGngefBu8Fl4I
3w9/B9/AXCvDe2qP0T8T3kL/K/AD8A/wIngW/D28lmdcz/nvjP8f53/Qv5vW
l/6H6f+U/qWs+S2Z96r67oW/ZuxwxjyUxrzLmDsz7+3X4UmZ9/N8xkxnzMfa
P7Sj6V+uZ6H/cs7fov8R+FJ4Obwf3ATeF+4OT4A/hN/hnlP1fuH34Lv0fuHn
Ct9XYwYUXl/91iLGjMsspy/DN2aWX81Fc1vFHJ6g/7LMeuBVrl3A376Q/in8
XsUfM+Y+7Q39VvT8pXM+gmfAX5Z83WPwL9zzw+j1WS85ov9yeAn967jnl5z/
Qf8meAscaQ/maAPXof8g+ES4NlwXPgGuBR8Ct4XrwjXgZvD+2pNwD/gw+Ai4
L9wAPhTuCB8EN4C7wYfCDeHucD24EdwTrg/Xg0+CD4aPhPvBDeGacEv4ALhN
0qXHwO2T/j8ePhEeBbeE2yZ9eCx8ANwcrg63S3r7OLgJPBA+HK4Dt4ZrwrXg
Y+AD4QPhFnANuCk8CG4EHwafDB8Cd4bHwu3gLvA4uD18LbwOvgi+AW6ofQ9f
B38GXwxfA38k+ZdtirYvshFX0f8O/efDo+H34AvgbvB4uKPGML5nZntxXmE5
HAhfDb8Lj4SvLCz/I+ArCuuF8+DLC8vhudK9heV2qOxmYb1zDtwVvhHuAF9a
WIaHwZcVltvh0oGFddDZ0vmF9cKZ8MjCum8I3CHZ61bw+YX142DZtcL67ix4
RGGdOAi+jec6M7Mt60T/DfS3hU+Br4fbSK7hl3LLwhvwq/BGeDn8Gvw1vApe
A/8CL4OXwJvg1+AXc8vL5fxW18y+wdv0v0n/t/Bb8HJ4M7wEfiG3HC2Gn8kt
70vhxfBX8Cvw07l1wmp4LfwrPJD7t8xsm4bBJ2S2ocPhEzPbuEFwi8w2bjB8
TGb7dTT3GZ50/hD6j81sy9bQ/wX9v0kXwW/B35VsW/QsdyPjQxnfOrNtbcyY
05Ld+QzeAP8pPQm/DW+RboFXw9vh5vCFcGPtH+7TPbM/04L+i+hvAjeDB8NH
wMckG9oMPgoeBh8J38G1gzL7ZtPgIZn9t46FfbnW8BT6B2b2o6bCgzP7dccn
ndwcPi7Z3KPhY5N+PgpeCX8Ib9Xe5tpumX2/T+j/lP4d8AfwSvgn6Wr4ffh7
+H14BfwDvAL+AP4RblnYZ2sqvQqvgrfB1eCmcBV4PHw0PBceBzeG58C94Vvh
ztrDkm/5M7yLx5NeeqdkX0a+3O3Bvol8nqnBPov8zDuD168zPC3Yr5Efe0ew
f6o9Myl4X3SBpwfrsLbwbcH6qR08Ofj9tIenBPu58sduCfaD+sGzZd+ZU2va
26XzaetybOJvtWlrcWzIvEdekb+R2x9cA9ekvZ5r9oHL0t4jG8A7+I5n3ZPr
fpZPwlEfPozjG/j+ku+9h+wCfYdwfJ15/erQjuC8Hrw33D/Y/zoNnhPsf50O
Pxjso/WFHwj25SUX44J9XsnO2GA/sQk8OtjnlQzeEOwzNoavDt7jveCZwXrl
HMlgsL/cH54brNeHSR7h66Sr4KeCddJQyXWw7Toavj7YXh0PT4AbSt71/NH+
bA/6ZwT70ZKpe4P9X+3be4J9Uunz+4LjD+mKm4PjgPrwJcF29Th4PLwba30Q
3Cra714N16CdIRtM35Yk963ovyl4zzaALw32x9fCtXL7kw05Nmf269fp/efW
fwvhnXLruefgf4LlZqnee24d/AT8e7CcLYPL5daX8+Bfg3XVR/B+tFcxt+/h
CiX7IJ/A++f2+z6Gq+XWzY/DvwXr7/fgfXLr3YfgrcHxinyhzcF66x24Um4d
Px/OctuBBWDIrSeWw+Vzxz0Pwj8G6+y58E/BOuNdeO/cMZB8qm/ov5q5lod3
kT/AeYkjBuv49+mvnNv+PA//G2z/h0tXB8vRj55O9lvudk/eTRX69+XYLpmX
XoMn047hqEjf7rR70bdD659ZNn9JLB32uuQodyz1GVwndxz2OVyXdg/G/yCf
MLN/94XukVv3r4Kr017Lb1RK8ig5/U3PmNmeLBLTzuRvW+D/leyT/wl/qzWC
Q/C7lM18mXZn2mnywxRDyH+jPSL4+tF6HumQknXtG1oH2srBc/2J8ya01dOa
SIdszZwHKB+tT/5k/GSOS+DFwb7JufDzwTG0/OoVwf7UC7pWe0r7CS5pTeTj
5n6Ppeh5/cL5nvQfSrub5ggfllunVYYbwZWk5+DD4YpwWek5rt3B+b7yFfnN
vbU+cP3c8c7ujPlLc6AtS/8huZ9dPt2TehaumQRfAC+E32TMMs6/Kdn3rEn/
8GB7chG8CN4Iv6l3kdt/fFX7RPctvB/+iPb7noL/CvYZn4b/VizAmE84/7lk
n3Qx/WWSPP5Ku5m/V+BoAJcr2VetzpizuHYOPAH+EJ4Nj4dXwvfD18PvBcde
N8OfwDPhG7RP4bnwRPhj+D74Ovhd+B74Gu01+F54DPw2PEP7En4HfhC+Cf4I
vjTJoGTxGq21dCPtHjzzRskyY0eVHG8q7ryN4wC4JX9vwNFK9ob2ymSzZLuu
KNnWXCc/kGOr1p81mKg9qv1M+1dum/VT7vigLjySe12W9rP29SUc5TLnrb7l
+p1pb5JMM74W/ecGxy4HwsOC46qD4QuDfQrN+UzJSm55PB0+JvrayiXHoJrz
ANkFjk7Bz6NckXyqJ4JzTvK15sGNg5Se9/c+tHmSU+Wc5F89Hpwnk9/1WPC+
1tr2Dt7veq4+wTkz+eGPBvt9p8KzguOP8+D5wTHxCHhBcC5KcfEXwTkqxcXr
4SvhM+CHg/Nkit9Xwx1lv4PlpxLHv5nlSjFiU9oxwTHlUXpHwfFiM/haeCJ8
Pvxi0qNlOLZxflJhO32C4gXaI+gbFRxTHg5fERy/HgpfHBzDNYKvDI5TG8KX
wzfDI+GXgmNf2dkL4K8L+yizSo4LtceGBseXNeBzgmPoQ+CLguPj/eAhcOvo
363Gtd047xrsH5ys+XEcF6zzpee1p+skHfiH9gv8a+a9WD06//Mv/VXp3z1Y
1/TQGnGcwrFftD7/R3ot2hf7XnaA+W+i/Zs5lInW5dtyK1rZ/5/hvoX1bFfG
tCqc12oBn1Y4N9QdrslvHMWxPvP6N0l6u3pivQvZymYcKzPPsynH3+rnt/ag
HRSc42kUnOc5IJo1h8bJdpTNvJcbJ64WnffaP/rvjdM+1xxkU5nifz6s1mtT
2v/VOPbMvE7/rVdmm7N/sI3cOdmdbWn8AUlmjk79PG7WnLaG9hmcJ90uHV85
2mZWjfZn6wX7tFp/sfrl/8q+apzWTGu3G8ckbrxvZn2r39k5/ZbWTGu3a/rN
XdLvTlDsSjue9kbFJJn9qAk89HGs2UPw57Qfaj659aP0pOyadNIKuEru399J
a6XfiPYNdknzbBDsq2vv1E+8L3/bmfa04H0nf1F7pWlaT62F/Ef175r2p+6j
d6R1lo2XSiqTZFXvqEnibem96/oa0ffbL72jFmkdtH92TSy/67XoPOcAnuvP
aF9UOcO/ov0K5bWWR+cblQ95KzrfqJzD2/DszHmJZdG5SuUr3ozOQyr/IDsq
e6r4OpbsEypfXZTs7ylXtjbah1TOYWu0XVYO55to26q8zS/RcZPyABui83LK
J6yP9k+Uh1kDP5M5D/NltK+iXM238JLMOR/ZMOkZ+SHHR9sg5SRbROsc+SSb
o/0B5XymahzrNIX272ifXPH+P9E+sPLziu2kXxTfbU26JqZWf9snWoYkS3r3
0j0HJz4oyZZs425pP2svtUy8Po2Rr9ov3U9+sNSMfOHa6XdPi47RVH/pVzhH
2Q0Oek+Z6wV5yb69Ns31hX0g6a4V0flt5Y5KJccIqkF8EJ3rVj5qdbQvpJyV
dN6n0j2ahPZE5rrGp9E+knJZq6J9M+XBNkbHIMqr1IqWw72j92bVpMekp9sF
62rF0WL57bJj7YNtWT35+pKlaNutWFv+famwz1KusM+s8XuVbBMVC1TI3Mo2
Sob1TtvC5WnrROuNg6J1WtskgzsV9kkr0Z4Y7b8pR1G/sC18HO5L/5GZa1u1
C/so0hsnR8fgqq2cBNfOXFuRnZI/XzXJb5sks9I3us9VwfGL+svQ7lLY560o
Xzv6OQ6NtnHak1oL2bqTE+sZO6bnvLtkv6gqbS/Oe3J0SddpvOyj8gyyb/KL
7i3ZT96nZNvXKa2t2s6JWyeWv6S4WPerlsbr742l2wrHAXsXflY9s+xyhzQ3
PcP0kv03+fld0xitSb/ofILqhkVhP7F84TnKFsuf65KeRX5A0+jrmkTPQeMa
Ka9fss+wH22n3Lm7ifyth/Ry5ppd9+g8gOp6slGyVbJrIbF8vIrRdnIw5/9k
9qu0D2VfZM9koxXDKZaTzVXcJR39ZeZ6a9ng+FR7e68kw/+m+8hm/5Guld+w
Pfe9FQ/JRlVIdqpamo/mVSnNQ9feUvJaap+MK3k9FFfKDu+RbMSthZ9fe7V8
8J6Tvfhf9P3lq1QM3veyEbeWvI8kF2NLXlvJkcbrOUO0jS+bnlFx5J5J1w1J
70TxT/NoH175eeVV6nK+f2FfXO9QsYFiBNl2+X67F87rVKftGZ1XUU25ja7L
XLeV/6d3qlzMsdGxhvKEVQv7+rPhI3PL2nnBMYvkQDHlD7n1iuIb+QXlgn2D
sYWv0bWKi9Uvv25Hel8bkz7XM8rnk82UHVXOokzhGKhK4dhSsqOcXc2ku+UT
1I7WbdJ1S6Lrj2fwWyuj64aqCygnKv1cMbeMS7YUY22PzgPsSH6IbPVO0fpK
sqs1lY6qkt7bmMLxuWLS36NjLtVEtkXnnZSL7hOdv1KdRbpUcqm8mtZfukI6
Q7bq/23XD9H5H+V7v4/OySivK59T+Yia0XGw9H+F3Hq4Qtqb0l3Sq/LLtFYH
Jrn/mWteypwH1nvRvtyLvu+ic2LKIfeOzvupbvVidP23L7wQvkO2Dn4puhbc
D34huv7bB342OnbupXWLznGpfrEguq7aG346OhbuAT8cHSOfAj8UHTufDD8Z
HZvLhm6Bn82c634sOh7vUnIssSGt1VPRcb38+Wei4/Se8Dx4bGb/f250nH4S
/Eh0/N6p5FyF1qTI7Q/LPspOSpdJ/0q3bU+yWoG+kRy9M9cLzo+OJVVHUywv
e6LcV8foeE11twHRuWvVE4+M1rnNonMd2lOf0raLjtdU1+sfnQNXbVE5Hsm6
vhtRLkc+rGKlv3P7MVU0x+gYU/U++THSd/JZOkfHmP/VOtNaac2UE5CPo7he
uSLJluIq2Y/u6XmV+5FfrM3YPjreVN1QOln5skrRvrRy35qDclDSrdqTZ0fn
/FUzPQGul7muqnyMdK1itR+j85mqdyjnq5hU9YhzomsBqpOeEZ3/V1311ehv
A/rDHaLjXNVPL4uOx1WjkT3qldZWvpr8Pa1Dl+i4W/XfEdF5ctVJu0bnulUj
PhPukLlu2w1unrkuPD/624BT4Uejc0SqieyIziuqHnd24VzS6Zp/4RyT5jm0
cN5HOueswrkkyc46rp2TudY2K/o7BNVbhxTOQ0mmZkZ/t9A22WLZd+VTN0Xn
qFXnmhwd16t23Dckvan1KPytg2SwkDJJ7+v26Byd6si3RuccVF8eXDifJRkf
E12P0Dck18F9Mn/zM7Bwbkvy27pwHkQ1oHuic5iqf82AL4VP1HoWzotp3e6K
zvuprn1DdL1G3ySMj66D6FuFB6K/2VCt+b7o+r5qowOTzZXc3Rn9bYnq3eOi
6yn6duWm6BqHvlcZHV3XUL3vs+h8uOqk/Qt/FyKdMD26nqUarvwl2VnZ2x6F
czHSDz0L502kiyZG54hUv1sc/U2L3vWk6HyR8gmjomsi+g5qTvS3KKpr9ylc
P5O+GlX4mxXlRU8t/K2M9M+wwrlFxYC9CudSpQ/HRtdrVIv8LTrmVf19QnSu
WDXEQYXzjNK9pxf+rkV6dXb0ty6qd58aXWfRdwvXSD4z1z2vja77qD54Y3Se
X7XIr6LrHaod/x8wrZ5T
          "]], Polygon3DBox[CompressedData["
1:eJw1mnXAHcUdRVfmgwQvUqTQEqSleHAneNBAcA/BNbhLcAgWILgluLtrgrsE
1wDB3QqlUOg53O0fm+zZ2bffe7szv7n3zvYZPGTgbk1VVXfzT+H/Ufyzfl1V
i7RV9aeeqloG3sN2jq0M7wO/AM/A+UfC+8Hvw3PCk8Jj4e3gGzn/VngA11kU
XoH2k+C9aX8SnhI+HF6f9mXgVeGT4c3hleB14NPgh/0+8EVc73L4bnhleDh8
PvwivD18E3wbvC88Fv4Lnz8KvqvkeqfQfh68FtdfBF6e9hPhw+CN4L3hpeCt
OP98+APO3xl+n/Zr4cdoPwReE14YXg4+AX6E8zeAR3L+FfDu8D1wS/vBcF/O
X5O2v3BsHva3ZFuF/XVpH0H77ZzfDz6ec86Gl/S+wwvQPh18J+0rwifTfi68
OO3rsj8jxxZjf2m2KdlfkPOnp305eDp4UXgmeHl4es+F/wpP6fX5PLvVZvw/
FN6Y/X1oX5qDF/P3NuT4ohyfFr4FXpr2Yzh2BnwA/AE8N+dPDg/kvLngVeA5
4Y3a/J7V4eHwJvCC8FrwvPDa8D/hleA54Be43rbwDVz/Fvh+eC34LHgk/AA8
AD4bHgXfC68BnwFfCN8HrwmfCV8E7wGPgSfi+ofCq/L3ZoGXhmeF+8N94KXg
WeDV4FnhZeDZ/P3wLvCx8Drw/lxvPDwXPBm8Ie3LwqvBp8CXwLvCx8EDu/4+
B7wi/A94Tz7/IDwxfBh8Ke27+bzhdbvnuRHffSDbwuyP5vy1aT8Hvpj2veCH
4Ek4fyi8OufMBi8Lzw6vA88Jrwz/E54fXp3PTu2Y9NmyLcD+mrTPQ/soeCf4
aHgAPF3J9Xaxj8K3lfy+4+Cz4M/ZFuQzA+ALaDuE7TPa5+fzU9N2puORtvk4
58/wrSXj+ViOnQkfBH8Cz8v5U8Jn2J9pm5vzp4Df4P9LaR9N+4HwFm3G90D4
dHjGkt+3F5/5GzwCXp79f3LeNPC0Jc9vZ47NAB8MfwrPx+engh+C14MvpP2y
rn/2hdegfW54ppL+uzftM8MPwuvCF8CXwiM5f2f7P+evDW/WZjyuDZ9qvYCX
gDeAF4DvKRnfp3q/4HVpnxvuT/tc8OmOd9qm4tjh1hrad2D/KNrXpH1FeCZ4
cbgP/DznbANfz2duhrdvMx42afJ8HqN9U/hS2q+CH6f9NM+nfQj8Ee1Xwt/S
/jj8MXwV/B38BPwhfAX8DfwYfBmfHwIP4/PrweNpHwl/Rvsj8Afw5fDX8KPw
k5w/wnrP+XvAT8FnWI/hPbt69A94Efg4+An4dMc7vDv8Dtc7G36P64223sIX
wZ/CD8Nvw2fB78IPwO/BF8KfwA/5e7jeTfAz3Xh/i/bh8Bu03w+/Cg+Fn4Tv
sj/DN8A/w8/A7/L5q+FH+PxBXh++Bn60q9+fwDfDz3bj93c+/zT8Z/h9+DP4
evjfXO9p+FP4Ovgn+Cn4Nfg4+AX4bvh1+Hh4LHwP/CZ8Cvw6fJ/1i7+3Grwd
11/c5wufCl8H7wa/zPkHwA9y/h3wINoXh9envW9P5pfF4PXg+Z2P4FXhbeHF
/H7wLfBzXT3pB/8dXhg+1v4Pnwhf0WT+uwE+0HoLbw7/1Ka+vt3N/zfBB1l/
4S3gm+GDrd/wlvC/29S/d7r5+Dp4P/h0eDP4Wnhf+DR4U/iKNnrjJHgDxy98
EnwlvIv3D74EfgA+wOcLj4Lvg/dzPoHPg2+H93b8wOfCt8F7wWPbzO93wPvA
Y+AT4MvhneDR8DD4MnhH+Bp4H8czvAl8Jbyn8zG8IXwXfCR8EbwtfAd8uPUD
3tr5Gz7C+gNv083vM8N94WPgXnAPz3ICtt7s3812FO0jad/OegIfDY+Ct4e/
bDL/fsf2J9ruZTuG/Ys5vgPtV8F7wafAG8FXw3vDw+GN4XH0n3Pg9/l7Y5zf
aT/E+ZX2QfD3Ter7L2xT0fZdk3ral/NngW9lO9T5ieNbWW+43mbeL9qvhmu2
Z+Hp/J7stz6DKnrxI/Z34PPLwZvBC8G7ttF3WzXRZ7u10VODm+i7IfCG8NZN
6uls8O/wpGyzsr9dG72wcZP5Zn94kPNBk/lzmzb6YKMm+sW/7/y6aRO9tXOb
er8lfI79kd8zL7xfHT16HTwfvH+d+f56eH74gDr6Zpc288ugJvpsGO0P+/3g
N+A/015x7mT8N41jiW0w+4ruS9QDnD+F379Of3gO3trxDt8EP13ye66Cr7fe
wls4PuFr4UdL7s8o+ErrK7y5/Rm+pid6x++7JH9vmM+m5O9fS/uN1mt4S8cX
fF33fadl/0uO9bB/Oe3T+nzq1O/92py/UxM9tiO8PLw5vDA8tfMy507CsW34
f58232eHJvpsrzb9Zfsm+m3fNr9nxyZ6r/EewNPDH1pPSvzD4XX08o0l+vuw
Ov7A/rAw+19wrLD/De13esv5/FjaZ7ce0v4rxxr2v6L9dvZ/59jzjif4Nvg3
+Dn4W/guz+XzLzoe4HvhCeCX4a/hOypPoNbAv8FP+Wzh97x/JXpzpzp63P64
DrwL7UvA05Tozx3r6Pu/qA/Y/5hj/22qP4T5M/w3Lfvj2f+C82+E/8M5z8I/
wPfBE9L+Cvwv+H64F/wq/CP8ANwbfs36VTL/7lHHf10B/83nAR9vPSupR34f
+8fKbfr7Ek3aB8NLwhvCC1pPSuaL3ev4J8dnf5817YvCy6oD4YXgGeFvrGnw
y0383n/4/GPwFPDb8C/w49Yy+B3nkxJ/NrSO/vsVfqKKXxznfAI/Ak8Gv+l8
BI+uovdfh3+GH4Unh99y/uXvXwzfD+8PH9RmfA1pou+GlHy/ppv/1fib1PFg
an81q33fMaCW1RN/Yy2r4pX1vI5dx7BeWN+kf1LT68/UoIPreDK1qZp56zqe
TC2t5lZ7q2En7okm/tq+X0Ur6+F8dj7D5TrN27bpz2phNfe/OP/zKlpcT7Zp
HU+oV6s5d2L2p65Tz63v7vdimxj+L9urzgf/fx7wy/C73f39DX4NHt89n4Zr
vgV/0ukfQ4M3+O8j+N2eaHC1uGPgNNp+5fOvsP9e9zwKx96BP+vmh0n9fnU8
6Vcca2l/m/ZPu/5/ScnY+A3+GO6Bx8Gfd/VhAvhd+ItufnHMOfYcY3pjPeyP
TeqD3tYxZ1+3zzsXO987H17aRI/d3kaPnQffCd/fRp9e0kS/qYfUbyOa6K8f
29SrN7vxpkfRq+hxJ+r0gHr0/Cb689A2+cieTfIC9av99+km41v9MxQ+Eb4d
/qjNeH6qiV41rzDv2KtJvf+gTT14oonerPmNb8Ifd/VIveb8+1Y3Pqb1mVep
idbG35v4s/m9J/Df2uzPy/ZX9mdkm4f9ueyz7I8syR/0ql9wvQv1q3U8ol5R
X6Y/W84+23bPrco1Zur0xILs/8ca2sYH6gdXqONXt+j+ljVxhja+Un+5Up38
pA/bRFWuoR7Zlv8XqjMHqAc+bFMPn2yix3+HX4c/6OrHjPzfm3NbtnHdHD1B
G3butg9P3aSm27fVBCfV8Xxqhc96otnsc/a9T3syTzpfHqrX7Ukd9zcfWNJn
vQf/ho+CV4Lv4nq7w6e0yZCG1KmpZksveb0mc8538JP2sTqeYjz8oH2mjgd6
qY0HPbTOnKg3VVOcX0fTqDXsQ2Z3amr7lh5Lr2Wff66NBlQLqpHVyno8vZ6a
Wm2tx9Jr6clebuPJ9GYj4VecG5wT4K2sN23GiF7HMeLYsc/rvdTEjoV7rcl1
xtgjbcaQXkaP4dhyzD1RZww4FtVsZk9mCmq5G5zT6miY4W3u4cn2oZ7cWz3M
oK5e623W6omvXsmcgu1Itp+6udZndRysPvMZ+izt/7059HOV8TBJm1rZp45+
cPy4v5TPrBsfvao8X/v35O0f0qD62jmO/Z+b5KOT1eETS/R+r64vbcd+XUdz
TdN93nO/8ppN9P4U8IRsE9H2S5Oc1mPq/8n8jnU01w+0HdImT9ujSV46mO1V
tSzHbmtTn+ZoMz7NVsw85m0zvsxC/g4f4pji/DXa3LP92R9T514uwnYe+wM5
tlMbzW3WY2akFp8PPtHxDG/aJjMtTTJRs9T14cdpPwy+HN7X+atOxvoivKs1
D74Afhg+Gp6lyRh2LH/b5lqvcOwI2t5po8cebJJfOEYcO483GTv6e/Xcw03y
DjOyI+t4ZrMzM8gj6nhms0kzQbW9mlntbKZ5VJ2M54+sEz66jiYy2zHTPKGO
BjbrNGMbVsfjmL1t0PX/od34M4M8sE4GZTZpxvJYHU9l9mImZRbcr0pWZab4
SB1PbdZoRnlQnUzP7NKMUW2sRjZ7NBM8uE7malaoJj+3jgZVq6vhRtTJGNR2
ejCzRj2R3kjPanYyvBuvZlD71smwzKbMLB+t4xnNMtV8eg89iFrQjOHiOpm6
2YMZhFmYmZjZhBpYLzOoijY2szitjob8I8twzq+TSZuFmKmdXifDMGszk324
TuZgVrsGPLpOhnBem4zuoa6emN0tC99aJ8M7sk3GfXOdzM3se3X4gToe/xzH
hRqgTqZ7vHOZc3idzPYEuB98W91lxPAy8C11l6m2WSOx3lrjrUersN3T1d9T
aV8BvrNOxnYS3B++t06mcDq8mpqjjmc/C14Vvq+Opz+jTcbwVp2Mz+zBNQvX
PtQEagMzlOfqZAZmK2YUT3X11+zCTODpOpmEWcGArv6aKY3q6qVj3Yzmgjab
GaU11DYzm+frZA5mOWYKz9TJQMwazBBerpMhmS2YGY3t5gPruxnKs3UyDrMV
M6MX62QuZklmCq/UyXzMGsyQXqqT0Zgt6ZHV2+pz9ZueVH2uvlYfm0mZNah5
1D7OWeZzrm85lzlnOpfe1WQudQ4zD7ynydzmHGg+emuTudE5UP91b5O50TnT
PPWWJnOpayp71sn8XWvRQ+glrDnWHj3HL3UySr2I9das2Ux7kp5kVnq7G7v5
1szRtSM9iVmkmfh/62R2ZuVmXr/WySTNwh5tMzdf0yQ/NC90br62Sf75Qxs/
+fr//WKbfOaNzi9+3ybPfK3zt5+38VfPN/HDX7bxUy808cvO2WqPq5vM5WoU
tdKrTbTL12383Iud/36mTb58c5P89qs2/m9s55/fauPHxzTJk/WL+r2XOv89
ro2ff6hJfu01zILV5F7bTO3NOhmpWZuZpmslD1bJOvW06v0+XT030zHb0eO6
9qiH1cvqr1wbNLP+qs6ahFm2nnmP7vlaX824v6yTQZp9mwnt380Xrg2N6Orx
Yl29M/N0LdI1U7PQ4d380rer73psvfjMVby3nndoV89dCzHjMOvQE7s2qofW
C3uPvFdm6F/U8bhm62ae39fJtM1CzXBdyzQTNds1Q/2wTgZqtmrGqf5TD+qF
zND10qOreBMzb9euxlTJws1Mf6iTkZulmpmOr6MfzVLNKN+psyZgdmnm6lqD
Y8qxZab5dp01ALNO1yg+r6M3XbswwxxXZw3BbNPMWz1qn7Zv39PVk2Hd91UD
TNVkTVltoCfRm7iedpHZR8lc7RzuXP5sN95u6n6fferb7vvZ1xwDZj16KseG
msK1Ece8WsMxZPaix3Bs2cfrbrzb9+3TCkD7rH3dMWPWpEZxLDmmzJrs8461
F7t6cXf3PB0Drq04ZhwbT3T37+qunjhmzXr0hI7lqUq8rRpWLftRV//sb/qT
qUu8SWMNZn/2Eu2j5lH7TFqSZaiJ1cavd89/TFc/9bS9u/6g19WD/tzVK72p
nkbtq4c0H5mtpO87BtQmelLXQqzBelU9mWsl1ly92hJs31TRyOYnR5dobzNn
8xJ/n+thZir69zlLtJYaS61l5mH2sZp90DylxHtbk63NE8IT1dHcJ3V5iZ7S
9fgJerJ+uGydNdPzzMbY5qmiedQ+eoKfmnwH7+/JJVr8+yrrd1OW/G0z6WPZ
X6bN2p7XNP8wr9ETz8CxXj3JI8yIXL+fkP1ZS7S2mm327nmYn/kOhvnSHGxL
VdGcak/zIT2z67vFa5doTTWj2tH+v1CbNU29+vQla7de02xOj75AmzXfC7v8
aa42/tu14GNKvLlrAOZTeoDZ2e/XxBv8tWRseT/UgxuWzNXO+c79eqpvm/w9
+9NQtm+rrFmYRx1W4o3GV8nXlizRVmoutdcSJdpLjaXWWrxEa6nh1HKLlWg5
NZfaa1F4xyqaTm23Rom3UFOrrVcr0apqaLX0OiXaSA2iFlm6xIurydRmS5Vo
MzWf2m+REq2oxlJrrV6i1dXAamE9jJ8/oYm32aREmzknOTetVaK11GBqsQEl
WkkNphbbqMSbqXnUPno0v/+5TbzbFrSfWaUmWhvXLNFyegq9xeYltdKaa+3d
uGQuVMOr5fXGW9m/mnjkTUtqrxpSLbl2iRZTw6nlNiup3dZoa/WyJdpUDauW
XaVEW6sZ1Y7rwsdW0YRqw3Hd/GQ91q+ZEbpWqgYxOzSTMitXc5hVmTmaBasZ
zCLNBF07MlMzKzQzNMtVM5glmte4tqJG6c3+30u8mZ5Ob2dG+adufjS7NCOc
vtODZodmmmbHahqzTjNGs3Y1kdmjGZBZUFFzsn9wm/X33Zu8P6DGcq1Wf6T2
WrFEK+tB9CKrlng1PYpepX+JV9GT6E1WKPEqeg69R78Sba8H0AssV6L91fxq
//VLtK8aWa1sxqL33rVJ9rJwyfPVU+mtBpZocz2AXmC9krnSOVMtvnyJ19Fj
6DUmLqklvpNwVkm+7btf03i/vJcltdJM7+ySNRvfvXFNzbWciUrqnZmz2bOZ
gtmC7zydX7Lm47s5rtG5FuQ99F0M1/y8t2YUvtvlmp/ZhZm87164pmZWb0bq
u1X6S7PTyUq0vprfbH5wSVagplHbuKZnLbQm6md9R8J3WfpVeXdiUIkWUrOo
XeYu8Z56VL3q/CVeWU+sN3bN0TbP0d+6Rum7ZL6j4tpl75Ks3TUD1w7MZPXD
+l/9WN+S56UH14vPUKIl1ZRm+/PBq1fx5HrzeUu8uZ5X7ztPiffVI+uVe5V4
Hz2Qaw+OMcfah02yEud85/4J2+RLZijWl6uaZCuuifrb/I36b9fwfLdK/+/a
nnmPWdmF+gr1WIn2UIOo5bYu0WpqMrXZNiXaUw2nltu2RBurSdWm28OXVdHU
auvtSrS1GlotrUexVlmz1Heu+fpun3mBa8E7lmhNNa3adtcSL6QH0gupP8z6
5unWB6YomWtdY3GtZfKStRbXYFyLcb1NrTNhlXx5p5LsSU2rtnX98rcqmsI8
zUzK/nVnk6xqN86/tYon05vtUuLF9Hh6vZ1LtKUaU2/nmqbvsvnOjmudrhH7
Lt9KVdaOfR/vX1XWe1z/2KDEO+t59b6u8brW65rrMM6dpSTbMQMyC3LN1rXb
QRw7kfaFaN+kSoZilrJliTZX46v1zexWgLdokuX5zqRzm3OcPt81YdeGt7bP
wX1KsiYzK7OrBUuyGTMes56ZS7yMnsbsbK6S65uJmY25Bu1atGu8x7XJBNU7
A5pkhdaX/nUyzFNL3hn13VHzjHPbvFPguwWuIR8DL1AythxjZk++T6UWW6Wr
X66RWwutic59rkHuVkfDqH98R8p3pVyDPqJN5mn26ZqGemkSxxv7P9pessbm
Wlv/rv75jqLvKrqGc3abd7J8N2tb+Mw2a/au3TtnjGhzPWupaxznlOhFtZ9r
GupV1/h89qt27dZjf4trYsNLNJnazDUW9dr/AFuciyA=
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13W4VVUaB+DLuZwxwJgxZtQZuzExxqAEAUmVUGkkpZFUQVBaEZBGJRy6
G6QESWmkQ0CQEATEAgtl3u/Z54/vuet71+/se+65e6+1zk21mpVrmsrKyvpS
pdUvObOy9oJr1Cb92eysrO6qm1pj7jVeSPBP46PGt6ibVVfWWaaTWm2uLSvI
fjU+YPwftc31fjf/O/taf4Pawc6xG9jj+vo5srKuZ0VZV9VFfW6ujbkCrnfW
+Evjf6mNcmfMT2SF9R299hFWhk1iRdhb7FFWlvVU76p15t4wV9j17jIubfyG
XF65Sub7q35qk7mO5p6Ru9u4jHE7uYfkKpsvyp9WG8y9aa6Y8T3GFYw7yT0u
V1Our3pfbTTXwVxxuXuNKxp3lntC7mXzeVhZ1p49zKqwwWqQ2mzubXMlvfZG
43zGDeVulithvpd6T603185cEblzxoeNb1K75P4y/wc7pL9R7WR/st/YQf31
ajv7g01gT+k7+B1vqttdbyYrz97XF5OrLneG7WH/VBvYz2ygGqC+MPcWL+G1
fxl/Y3yr2iOXpb9aPaSv4npXoAJec54dY7elknsyh36KKqnvLleAVZSbzEqw
biw/e4HNYZXZYFaW1WMLWW32MXuBNWVzWRU2hD3L6rPlrDmbwmqzdmwGK8f6
sKKsGlvCGrJxrDprw+azl9lwVoE1ZstYMzaZ1WJvsFnsJTaQlWZ12U42lO1m
fdhctoK9yqayOqw9W8riQZ3EJqonfaarWEs2XV9ProPcAlaLjWAVWRO2jb3H
1rDV4V47lZViPfQF5V6Um80qsUGsDKvD3lE91Fpzr5t7ymvnGdc0HiZXXq6R
+WnsOdaLvaful/uMNWLj9TXk2spdxx5jtdm1rAi7lv2X1WLXsMLsAzVEbTHX
yVwp18uhvjW+Q+2Tyzb3kcyHaqtxZ15aZpzxE8ZtXe8+ueLZyeJ2nN2u9mpT
MtPV8/reck+zqnJXsbysMvsHy8+2swFsM+vBprNPWA02lH0Ua4zrL2YN2Fh9
NbnWcjviPcbzx3bGvSA3nj3JXovPSa6Y3CJWn41mVVgrlpI9we5U++ORkflU
vaIfI1eVtZTLljvJ7lJfxZ8qs1K10E+Tq8velDvClrHzbC7by25hBVkTdhsr
nZ2s0bFWf8X/ZnyR6z8oV03fU66IuYbZmf+d8R1+3qkulrtc7gG5XPoL456O
z1PVYf30JeSbR5bdwy42voD31l+q7ov3p36T66q/SOXR/65+YG/F9VVV/bte
V5g1cI0X2RC2inVgs9k1OZO/Kf62vPph+gKZtXpaOlmTY21+mNVjA+RKybdg
D7G6rD8ryV6Nv4fdHe9NnWYd9S+owfqVsU6yWXKXsftjU43P0o9ucX+r1myU
XGX2trnHM/vkxHSyv8Y+ez97MfZTuXxytdljmf1vQjrZX2OffSKzF09KJ89n
PKdPZp7Ryelkn4v9Ln9mP5jKeuv7qEdZKzbS76gUnylrFPcWO8FGsl3x/808
e7PTyTMWz1qhzJ44I52s8bHWP5VZ52emk70q9qyCmb1uejrZS2NPvT7+5/Fc
xP6mH6F/OvPczpEbGv8jVTiz181KJ2tArAX5Mnv2lHSyz8V+V5ENYitcr73r
zmSPsMbsQ1aOvc6Ks65xPdaIfcwask/YETaMbWUN2Fx2mA1lW2KPZ13ib2MN
2HD2CpvDDsWzzzaz2rFPxZ7F+rHVrBr7H9vEurFFrD6bEc8pG8TWs7psWqxp
bABby6qzkewL1p19yl5m42KPZr3YclaHTY01jfVna1gNNoZtZT3ZUlaTjWXb
Yn1my1i9WANjbWED2Tr2EvuAfc46sjnsGdYt7gPWmI1kz7I+7FPWik1k5Vl/
tpS9xqayCmwgW87asRmsEhvG1rFObB6rzIaz9awzm8+qsBFxrmBd2AJWjvVj
n7G2bAorw3qxhawFG89KsXfYJ6wZG8NKsO5xr7EmbBR7jr3PFrPWbBJ7nvVl
S1gbNpmVZb3ZItaSTWBV2cdsI+vKFrLS7F02jzVnY1lJ1oPNZU3ZaNaYLWYn
2Si2mzVln7Hv2Jg4k2f21WdTyRkszmJ9Y09g69iF8b7ljsidZOv1F8X7ZkfZ
IbYo1iuvm8Z2sK/ZQvYrm8q2s4NsAfuFTWHb2Cn2Bbskni92ku1hE/XfyB2N
z9B7Oc22sMti7ZU7Jfc926q/PO4j9h07zJbq//K6OWwfO87WxB4Tnys7xI6x
1fq0yhl/d+z5bK3xBXG/yR2W+45t1l8aay87wX5g2/R/V6vZaXaULY+1OO4F
P/az3Wy0/qD3MoQtZrvYKHaADWZL2O2sGGvF8rBy7A5WPJWsYbGWlWe3xjrG
WrC72HPsJpafNWK3sJLs5th/WGN2KyvFbmNFWUt2N3ueHWDz2Vl2Ju5Bn8HP
bDe7Op4RuZ/kfmQ79VeqK1QnuS/ZJONjXjdcbqXcXjaZHWcj2Cr2FZsdeyob
zzax/WwW+56NYxvYPjYz9js2lm1kP7Fd7Kp4htmP2cn5tEkqOQvFmWiU9/IN
W8FyxPMQ5wm5+2LP1HeJMyyrxcayR1nz+J7BCrHR7EH2CruB5Yv9h5XSP2Cc
R+VKJ+ew6qnkzBlnzw9YK7adZcea4LU/yI5hj+ibxTOo/i3Xkm1if+pny30r
d2XO5PtnfA/9xVyHWDPU+Th/mT8b92Hm+++RzOcen/+BdHLWiTNPbrnsOC+k
k+9RhVLJ74zf3TPOHSyX8SUyp+M+Z31ZbnYpOxPPROyHrAx7MD43lZvdyZ4x
34bf6z1V4C3YRnaOzWLHs5Nz54ep5Lwf5/55cXZgZ82fi/9xPGOsCVtifEpm
tLk9med8Qio5r8a5dZFcG7af5Y61XO63zH06L5WsBbEmLEsnn/PDrIa+Zuxd
6eQ+3ZF5nuO53hZ7OLvANa7Tb3G9XjmT79HtU8n3m/ieE2e0+O7Sk83XL4hz
K2vGVrKfIue1B13n1Xg9+4PNZMdYLTae7YjzJVuRWV8+TyXPVTxfa12vNdvH
cqllcr/KNWer9D/LTGZfs/8DwSxVFQ==
          "]], 
         Polygon3DBox[{{1187, 557, 352, 351, 753, 1146}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jssXWEAB/Dvqkc9ilHjfZVqRJMmXTyurTEwiRgUg0cThkqkQztKiEpX
0a1iYBSDjo1BRzHQ0uIqq4iIkBBp09+XGP7n9//OzTnf49zqwfGut4kQwpxU
KrE/drlg84MQitnKSrbzOXuY4gg7+Y6vOcVpGdMX+YGr/Mh1fuYWl5nmV57x
Oz9lhpBp3pTsGDcxV8oyQvhhXM6frOBuXCv3WMVfrOZvJlkj+/oTHrCWh6xj
mk95xHr+4TMeM9dass3ZJidx/8yTHGvbNr71+wZPucYDLnGT8/zGGa7wPRf4
RUb1SfZygh0cYiu72chXrOCsuTLMmZSiuN/4TeSNFBq/5Ig80v/JsF4Qz4d/
4x7je/V8PaHfMS+ej/4inml8Z/yO+sP4rfUGfSDuM54J+yVbv5Y+PYulvGIL
LTHcObNLejyUuNS671a4cTm//y/9B+0ZPlM=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{826, 1143, 1293, 1032, 1151, 1144, 1294, 1033, 1152, 1145, 
       1295, 1034, 1166, 1153, 1171, 1175, 1035, 1168, 1284, 1296, 1173, 1177,
        1036, 1154, 1285, 1297, 1185, 1037, 1155, 1512, 1146, 1187, 1511, 
       1156, 1147, 1298, 1038, 1157, 1148, 1299, 1039, 1158, 1149, 1300, 1040,
        1167, 1288, 1301, 1172, 1176, 1041, 1169, 1286, 1302, 1174, 1178, 
       1042, 1159, 1287, 1303, 1186, 1043, 1160, 1513, 1150, 1044, 1161}], 
      Line3DBox[{828, 1188, 1414, 827, 1304, 1045, 829, 1305, 1046, 830, 1170,
        1306, 1047, 1179, 1291, 1307, 1048, 1182, 1515, 1181, 1049, 831, 1308,
        1189, 1415, 832, 1190, 1416, 833, 1309, 1050, 834, 1310, 1051, 835, 
       1290, 1311, 1052, 1180, 1292, 1312, 1053, 1184, 1516, 1183, 1054, 836, 
       1313, 1055, 837}], 
      Line3DBox[{839, 1191, 1417, 838, 1192, 1418, 840, 1314, 1056, 841, 1315,
        1057, 842, 1316, 1058, 843, 1317, 1059, 844, 1318, 1193, 1419, 845, 
       1194, 1420, 846, 1195, 1421, 847, 1319, 1060, 848, 1320, 1061, 849, 
       1321, 1062, 850, 1322, 1063, 851, 1323, 1064, 852}], 
      Line3DBox[{854, 1196, 1422, 853, 1197, 1423, 855, 1198, 1424, 856, 1324,
        1065, 857, 1325, 1066, 858, 1326, 1067, 859, 1327, 1199, 1425, 860, 
       1200, 1426, 861, 1201, 1427, 862, 1202, 1428, 863, 1328, 1068, 864, 
       1329, 1069, 865, 1330, 1070, 866, 1331, 1071, 867}], 
      Line3DBox[{869, 1203, 1429, 868, 1204, 1430, 870, 1205, 1431, 871, 1206,
        1432, 872, 1332, 1072, 873, 1333, 1073, 874, 1334, 1207, 1433, 875, 
       1208, 1434, 876, 1209, 1435, 877, 1210, 1436, 878, 1211, 1437, 879, 
       1335, 1074, 880, 1336, 1075, 881, 1337, 1076, 882}], 
      Line3DBox[{884, 1212, 1438, 883, 1213, 1439, 885, 1214, 1440, 886, 1215,
        1441, 887, 1216, 1442, 888, 1338, 1077, 889, 1339, 1217, 1443, 890, 
       1218, 1444, 891, 1219, 1445, 892, 1220, 1446, 893, 1221, 1447, 894, 
       1222, 1448, 895, 1340, 1078, 896, 1341, 1079, 897}], 
      Line3DBox[{901, 1342, 1080, 899, 1343, 1081, 903, 1344, 1082, 905, 1345,
        1083, 907, 1346, 1084, 909, 1347, 1085, 911, 1349, 1350, 1086, 913, 
       1351, 1087, 915, 1352, 1088, 917, 1353, 1089, 919, 1354, 1090, 921, 
       1355, 1091, 923, 1356, 1092, 925, 1358, 1094, 927}], 
      Line3DBox[{926, 1093, 1357, 924, 1461, 1235, 922, 1460, 1234, 920, 1459,
        1233, 918, 1458, 1232, 916, 1457, 1231, 914, 1456, 1230, 912, 1455, 
       1229, 1348, 910, 1454, 1228, 908, 1453, 1227, 906, 1452, 1226, 904, 
       1451, 1225, 902, 1450, 1224, 898, 1449, 1223, 900}], 
      Line3DBox[{929, 1359, 1095, 928, 1360, 1096, 930, 1361, 1097, 931, 1362,
        1098, 932, 1363, 1099, 933, 1364, 1100, 934, 1365, 1236, 1462, 935, 
       1366, 1101, 936, 1367, 1102, 937, 1368, 1103, 938, 1369, 1104, 939, 
       1370, 1105, 940, 1371, 1106, 941, 1372, 1107, 942}], 
      Line3DBox[{944, 1237, 1463, 943, 1373, 1108, 945, 1374, 1109, 946, 1375,
        1110, 947, 1376, 1111, 948, 1377, 1112, 949, 1378, 1238, 1464, 950, 
       1239, 1465, 951, 1379, 1113, 952, 1380, 1114, 953, 1381, 1115, 954, 
       1382, 1116, 955, 1383, 1117, 956, 1384, 1118, 957}], 
      Line3DBox[{959, 1240, 1466, 958, 1241, 1467, 960, 1385, 1119, 961, 1386,
        1120, 962, 1387, 1121, 963, 1388, 1122, 964, 1389, 1242, 1468, 965, 
       1243, 1469, 966, 1244, 1470, 967, 1390, 1123, 968, 1391, 1124, 969, 
       1392, 1125, 970, 1393, 1126, 971, 1394, 1127, 972}], 
      Line3DBox[{974, 1245, 1471, 973, 1246, 1472, 975, 1247, 1473, 976, 1395,
        1128, 977, 1396, 1129, 978, 1397, 1130, 979, 1398, 1248, 1474, 980, 
       1249, 1475, 981, 1250, 1476, 982, 1251, 1477, 983, 1399, 1131, 984, 
       1400, 1132, 985, 1401, 1133, 986, 1402, 1134, 987}], 
      Line3DBox[{989, 1252, 1478, 988, 1253, 1479, 990, 1254, 1480, 991, 1255,
        1481, 992, 1403, 1135, 993, 1404, 1136, 994, 1405, 1256, 1482, 995, 
       1257, 1483, 996, 1258, 1484, 997, 1259, 1485, 998, 1260, 1486, 999, 
       1406, 1137, 1000, 1407, 1138, 1001, 1408, 1139, 1002}], 
      Line3DBox[{1004, 1261, 1487, 1003, 1262, 1488, 1005, 1263, 1489, 1006, 
       1264, 1490, 1007, 1265, 1491, 1008, 1409, 1140, 1009, 1410, 1266, 1492,
        1010, 1267, 1493, 1011, 1268, 1494, 1012, 1269, 1495, 1013, 1270, 
       1496, 1014, 1271, 1497, 1015, 1411, 1141, 1016, 1412, 1142, 1017}], 
      Line3DBox[{1031, 1165, 1164, 1514, 1030, 1510, 1283, 1029, 1509, 1282, 
       1028, 1508, 1281, 1027, 1507, 1280, 1026, 1506, 1279, 1025, 1505, 1278,
        1024, 1504, 1277, 1413, 1023, 1503, 1276, 1022, 1502, 1275, 1021, 
       1501, 1274, 1020, 1500, 1273, 1019, 1499, 1272, 1018, 1289, 1498, 1162,
        1163}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{348, 786, 750, 781, 751, 1296, 812, 810, 816, 811, 1307, 364,
        574, 1316, 379, 589, 1325, 394, 604, 1332, 409, 1442, 619, 424, 1453, 
       634, 1346, 439, 649, 1363, 454, 664, 1376, 469, 679, 1387, 484, 694, 
       1396, 499, 709, 1403, 514, 1491, 724, 529, 1502, 739, 544}], 
      Line3DBox[{349, 297, 764, 752, 1297, 822, 342, 819, 1515, 818, 365, 575,
        1317, 380, 590, 1326, 395, 605, 1333, 410, 620, 1338, 425, 1454, 635, 
       1347, 440, 650, 1364, 455, 665, 1377, 470, 680, 1388, 485, 695, 1397, 
       500, 710, 1404, 515, 725, 1409, 530, 1503, 740, 545}], 
      Line3DBox[{350, 794, 795, 765, 1512, 753, 351, 564, 1308, 366, 576, 
       1318, 381, 591, 1327, 396, 606, 1334, 411, 621, 1339, 426, 636, 1348, 
       1349, 441, 651, 1365, 456, 666, 1378, 471, 681, 1389, 486, 696, 1398, 
       501, 711, 1405, 516, 726, 1410, 531, 741, 1413, 546}], 
      Line3DBox[{356, 788, 756, 782, 757, 1302, 815, 813, 817, 814, 1312, 372,
        582, 1321, 387, 597, 1329, 402, 612, 1335, 417, 1448, 627, 432, 1460, 
       642, 1355, 447, 657, 1370, 462, 672, 1382, 477, 687, 1392, 492, 702, 
       1400, 507, 717, 1406, 522, 1497, 732, 537, 1509, 747, 552}], 
      Line3DBox[{357, 803, 804, 772, 758, 1303, 823, 824, 825, 821, 1516, 820,
        373, 583, 1322, 388, 598, 1330, 403, 613, 1336, 418, 628, 1340, 433, 
       1461, 643, 1356, 448, 658, 1371, 463, 673, 1383, 478, 688, 1393, 493, 
       703, 1401, 508, 718, 1407, 523, 733, 1411, 538, 1510, 748, 553}], 
      Line3DBox[{358, 789, 790, 773, 1513, 759, 359, 569, 1313, 374, 584, 
       1323, 389, 599, 1331, 404, 614, 1337, 419, 629, 1341, 434, 644, 1357, 
       1358, 449, 659, 1372, 464, 674, 1384, 479, 689, 1394, 494, 704, 1402, 
       509, 719, 1408, 524, 734, 1412, 539, 775, 1514, 776, 777}], 
      Line3DBox[{540, 735, 774, 1498, 525, 720, 1487, 510, 705, 1478, 495, 
       690, 1471, 480, 675, 1466, 465, 660, 1463, 450, 1359, 645, 435, 1342, 
       630, 1449, 420, 615, 1438, 405, 600, 1429, 390, 585, 1422, 375, 570, 
       1417, 360, 561, 1414, 345, 1293, 554, 761, 784, 783, 760}], 
      Line3DBox[{541, 736, 1499, 526, 721, 1488, 511, 706, 1479, 496, 691, 
       1472, 481, 676, 1467, 466, 1373, 661, 451, 1360, 646, 436, 1343, 631, 
       1450, 421, 616, 1439, 406, 601, 1430, 391, 586, 1423, 376, 571, 1418, 
       361, 1304, 562, 346, 1294, 555, 762, 295, 792}], 
      Line3DBox[{542, 737, 1500, 527, 722, 1489, 512, 707, 1480, 497, 692, 
       1473, 482, 1385, 677, 467, 1374, 662, 452, 1361, 647, 437, 1344, 632, 
       1451, 422, 617, 1440, 407, 602, 1431, 392, 587, 1424, 377, 1314, 572, 
       362, 1305, 563, 347, 1295, 556, 778, 749, 785, 763}], 
      Line3DBox[{543, 738, 1501, 528, 723, 1490, 513, 708, 1481, 498, 1395, 
       693, 483, 1386, 678, 468, 1375, 663, 453, 1362, 648, 438, 1345, 633, 
       1452, 423, 618, 1441, 408, 603, 1432, 393, 1324, 588, 378, 1315, 573, 
       363, 1306, 319, 320, 1171, 243, 311, 244}], 
      Line3DBox[{547, 742, 1504, 532, 727, 1492, 517, 712, 1482, 502, 697, 
       1474, 487, 682, 1468, 472, 667, 1464, 457, 652, 1462, 442, 1350, 637, 
       1455, 427, 622, 1443, 412, 607, 1433, 397, 592, 1425, 382, 577, 1419, 
       367, 565, 1415, 352, 557, 1511, 766, 797, 796, 793}], 
      Line3DBox[{548, 743, 1505, 533, 728, 1493, 518, 713, 1483, 503, 698, 
       1475, 488, 683, 1469, 473, 668, 1465, 458, 1366, 653, 443, 1351, 638, 
       1456, 428, 623, 1444, 413, 608, 1434, 398, 593, 1426, 383, 578, 1420, 
       368, 566, 1416, 353, 1298, 558, 767, 800, 799, 798}], 
      Line3DBox[{549, 744, 1506, 534, 729, 1494, 519, 714, 1484, 504, 699, 
       1476, 489, 684, 1470, 474, 1379, 669, 459, 1367, 654, 444, 1352, 639, 
       1457, 429, 624, 1445, 414, 609, 1435, 399, 594, 1427, 384, 579, 1421, 
       369, 1309, 567, 354, 1299, 559, 768, 754, 802, 801}], 
      Line3DBox[{550, 745, 1507, 535, 730, 1495, 520, 715, 1485, 505, 700, 
       1477, 490, 1390, 685, 475, 1380, 670, 460, 1368, 655, 445, 1353, 640, 
       1458, 430, 625, 1446, 415, 610, 1436, 400, 595, 1428, 385, 1319, 580, 
       370, 1310, 568, 355, 1300, 560, 779, 755, 787, 769}], 
      Line3DBox[{551, 746, 1508, 536, 731, 1496, 521, 716, 1486, 506, 1399, 
       701, 491, 1391, 686, 476, 1381, 671, 461, 1369, 656, 446, 1354, 641, 
       1459, 431, 626, 1447, 416, 611, 1437, 401, 1328, 596, 386, 1320, 581, 
       371, 1311, 808, 807, 809, 1301, 771, 780, 770, 805, 791, 
       806}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
JW5QU7umVUoYFW7nXK/PucRfzmb37TwhjHJi+nUvxmMwXXs571YPEKbTFUZZ
Rdltbmv8g+6chFwsurZS197IMD2n6yyM7vD13i1htsSPKW+7yeArjF7HKbve
ubPEQ4z91U/fFUZzF3Z+rYpa4hbK77Ps/ITRvPP3fX3SljjXx6qQW8nC6IeY
2WNSRUu8JvLLZpUTk7kUHnmlkaeW9N+KgyKBTf9Ev343/D1dU3wln2vrte0S
W8lLOIrqjURW8h1HQu+5d6/khrEKI5OhK3XqO2f+ua49si0271zgSntBHU0L
y+aV9ncGeetut03l8u/3Zm6q4Pmbz76oGwnHr9Sj5zYPBFW0r+RvlZXHKf6J
3r3ZrJpC6J/o3VheQVE1Q9Rhc/7WYdfbUtuddMn7S6+k+Ivb3yTyNys4xT/9
+e/HL9UT96FluR5NcbyQeY/XYMcK3pNOtC9fwX+ja/+nx/9/miMviqwumK18
Tz4VEvn/3PfkD//D//A//A//w/9v8rURF1cdU9QGDOXbJT5WHIMHP7yMnyec
nxcG7t4cib4PvyobzTAHegB6P333ooVRsIP/kvaaEX949aH2FlaWMFB43Cp9
bH4UsKwj1816N1OS6mZqWN3srV7FgVN22tBsfnLyCYcYaGnQDCX6N2NpQukf
3wfb8vhojWM8oG4DeyTRfw4FfPqlzx9sy+jZ8HpHGMzKbPIYJfg/Fac12/vm
GrjDG1519wcVPMIYFjtL7O+9x/rCxNAaFCyI1M23n4alyg/f9BJ47Vp10N9g
DUIdPlYzVl6Fl3t4zDsJfBKVjzK97Qe/x1xpye3UhWoWLC8/ENalcKUk1aMo
ctFf6lGDkQpPQ1OuQQnG/rDg9LVgtXBNDHFdMXqVy8VG1tD7/a5r+nvOALGs
oETiutLxDg9Cm6xhC8OuEnzdVcBgul+fuG5iiYVs1l0/kC7lQ+OVrwvUX8+c
Jq4L4gs+0TUmorqqH/n7x/HIFZS8bvDqx7L3hntRNm9j5DFzF/IKjpH49JdX
InNsC6jnjOIJni1dSOKafBKnDB9keXycDpZ33GNDi/HIWTp9cn5kIwzF3ddD
H+v963I48EhUyA5yvs/ea5hoRQ8bxVT62rk7ESk3hMRzhNbqs2tTQGmzcHdB
+g5kl8l7Eqe4eIpUR/q+9tc6kgKf6UDG6hgk1idu55QSHrHd/Z3EJx9ubdn8
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[0]], HoldForm], TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{363.415162285111, 125.78174297658362`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.314748565068163, -2.4527575186072488`, 0.27553518002333965`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.659216780831026*^9, 3.659216811896818*^9, 3.659216865508442*^9, {
   3.6592169029214153`*^9, 3.659216929200068*^9}}]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
zQSsS6zeUt0WzptDVTV11fn1oh+ZK/z61Z1h9b28C/x4Jp/9bdmWjHW8yT38
eEaq5votXo71Om9DfjzbdeqeTqrEOluMDD+eVOesq2e/KZL7rXk7g11U6j44
/98oqq6I9bGGpvwmIcqNCpQK7fk8De93tjBTY+9IF+q3xVuqyQHrMAWcMzOX
2thRUczmawdC8X7b0pT9GqbZUiY0lY5KXfy9zqjk15F+yQ6rdzXw49l57ZLW
rddY78rl8eNx/9d2YfJzFXK/T4X48Ww9Veu7whLrKtG+/HjKrlgY/5yGdZUj
qfx4Rs8xeB2Zgr+/HlZzJq4760d9qtWKD5+oTjz8dXefX5TsS9EDRlnJB2L9
6sD6TBehYB+KrrHGdM8xfK/0zXOu4U3zomq9c04fWYEehEuO9NF+r6G0D/qn
PHdHD6r6/DrPpeH1KEt+PD/F9ZaFflMjHjxc+fFM/1xrnq2E9ai/Qfx4Fl/7
9/h+Gb6PV5/kxzOx1SDwiyt6cC7mx6M0Y06R3yL00OuW7s+1DKFYdvVSlspY
X7rXptVfWBpM+dGkIwsvYH2JG1Kzh6ceTEnI7jaJGcC6x+0frUuFqCDK7pqn
3gQe1j0cRymsZ89dR0WMcmU+Msbn5+d0r0PckRzKiql14pQcektTyb7N+xBA
tfGsRgSHorc3L/h1m6xh9aUzrvz4T44SUc14hfWliI/8+FsWVvdqW2N9aUkw
P/6nwUbrvwlhfUmhmx//Tm+rH6/ZWF+6LcKPv00n5GBoJD5vTlP58beMzKYe
30TPn5X58Vf4mNYypqPnRVIHqzl3w6iikgnGUwOwviR+XMeDqx1Gnc4J7XK/
gPWl1yqvfhTmhFLWh9zrqBD0nFcQnsibFkoZMf5mT1iFnkP1p0kLJW6g8pqL
j3yrx+fTuPzqRdrv9dT5Kc55wp/wPXHislUmbP/1VF7a3/fyEeiZlsKv21gO
qy91TePHv6esdXZNOtaXbmby4w8NDlPfbY31pd3K/Pij7+ssWy+D9SXHfH78
c56reL9dhfUlpQX8+Mv0Rd7Ql+Lz/KOMHz8nq615mjrWl25Y8uPXOigy/u5E
9Bz/9AiTvSCS+hL0aazbc6x7rHTQL+ec3UR1RenP1KzF+pJcS/1qrvQmijXu
0MG4j1hf6vCP/FKYHEF9KfwSd6Qe6x7Xv8+I4fVvpF7Hd+nYbUTPO6NKJgsF
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
W8c/LljHnzVs/4CXYP/AtmH7B4oE+wf+Px8u81w=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
o/nPCM59FAdnBudE0hj/B+9hCTQ=
          "]], Polygon3DBox[CompressedData["
1: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
doyObdT+dtYQuYh5pP09dey96BqZWpmcSG78gbogWJPxe74nDhb1wUfab6bz
O4uPJUfq/K06Vj5YQ34WXVNTW9cg5+XeyrRgMcZ38Cz3Kr6bmNgtWOMSK6mp
vgj21Ki1yB97az/p9ShyYXQ+jTrnK+0viv59/2nbEK0LudZfi+e3OPp+bdf2
RfQ9IXbvGn2v8LhWBtd0eF/UqeS3n4v7E3L7B7vw2SXnK35bOb0eXbKOQw/9
Vtwfamhq04WZa2s8sw3BHiVeGjG+q/jkzLH/tOLe/antk2j9w72tFq2d0aHo
kb+K+0tOOV/HTsqca5jznYLnHGuhmrbmfLbOPblkDc7c2j9am/PMmPu1i2fJ
muKzakSvNX5TreCczG8l53GtNaNzIRq/aTE/nieXljwHuL6m5PtiflMTURtt
E3fI7ClQ//yYu966OLieoeafVegzvLGfCj1DTUltOajQi8QIYkWj4vNOYR4w
/wv9RM1J7VlP53+q/Xk6NpP8oe0UYgHzIHkNNg9+pqzNHZJrPWpMas2QXEtR
Q1JLNtT532h/mY49jV5I1gfUXNRezImGwXOUuTKg0JvEXGJvnlybUINQi+yU
rK3RIOQjPIY5hR7Ge/hF27mZa1pqW2r++wp9Sa7Co8KrwjPCG8PDwMvAk8Kr
wjPEO8QjekP8F+s585pBi+KJ4o3iqeJtL9O2KXPNdKrGfxVfkLlmph7Gg8P7
xEPCm8MT3VrE/8XiWuJl4ifF08R3lBxDiIcn6/25+F6NjxX3ye0Hbc6sudHe
v2rTobI1Smy7tcgv5JMl3A+Nf5l5jRPLdkzWbtToxM+dk2sXag7yZ7nk2oMa
hvz5Ue7YRoxDX67MXa/gYVLP/EPMFq/Q623cm9yxkxiKXl2buz7Bs6TeWcea
zuxZUu+8m7tWPipY7xKjDgvWvMSuH3L7HxcG1/NbivnYI7j+2oxmIr8E1z/U
s+SZRG2hbTd93pMau0nnDCU/5c4F5ATqg29yx05iKPXft7n9hu7B9V9V8VHE
Cl3LWvEn4oPEzYL1Oze/MmtB48vFR+r7/gjuSdCb+K3If3gm1Bd4Mp9Gxyu8
mj8LfYUngzfzu7h/Zo+DemZ7oYeouam9aTqhZ/Aw8DL+K/QUNT61/l+F/sFj
wGv4u9BH1NDU0m2K+dlB1/Az15K7XsRjQL9/n9uv6hfsz2wlp4r7B/sr5ZPn
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
CSV0
          "]], Polygon3DBox[CompressedData["
1:eJwt13fAjuUaAPDP+71vmtpOkqTiVAihExEVCUkJ2bJCyM6Wmb33SNlb2QoN
mqd1TieloU57L0m7zu86tz+u77mv330943ue576f+y3RvmejuzN5eXnviJzo
nM3Luwr0K5CX10ReJj8vr6loIobru13fz7ZH5fW1B6proa6m/BbRUAzR31jf
j7Y/yutpD1DXXF0N+SuiIPtY5PMb1T3L/tLez+J6DvtzI6sjBuhvKP/W9s/8
dOy2LvZW7UbiLXE6+0Ic7xg3qTtddJHPkQ9wvO6xn7hNDNPXVN9Ptr/mp2O3
dLy6ca3iBlFb3KP/Zn3fZNN54nxDtZuwo7Yt5M3FCO3m7Ffb5+UFtD+If8K5
b2A/swby5rl03Dh+d16TDVXTRmlldkCcxD4Tx/F6au4S18gHy1upu0JNV1ad
DWItWUXWjdVgQ1hrVon9Fs+EtXLe+to3iWbidnGv+mb6frEdI/pob7LvNPv2
1/9LfvrfW+TSM4hncZq4VP9B/qbYab/f475ot1bXIPYRo3lvttHxNojT9F3H
rxX9s+lefG37U1yTdrNc6oua3rwOG22/js51NTuDdWVz2UDWgxVjA9lKNo4N
ZSXZfWwrm8MmsilsGnuB/VNc7Fxl2Vy2X75S3UJ1Jdhwtp5NZaNZGTaH7WMr
2AJ2HxvMdrD5bBgrzWazJ9lyNp9dwIaxdWwKG8UuinvNNrNZbDw7k3Vj89kQ
1otdyEazh9lMNo6dw/qyB9koNoCdxbqzBWwo680msvHsKbaKTWGT2AT2NFvN
JrOzWQ+2kA1jfdhYNohtZ/PYcFaYxQSxiA1nfdl5bABbwe5jQ9hkNpE9w9aw
qawI68eWstFsIDuX9WfL2Bg2iBVl97DlbCwbzLqwKqw/a8rKsglsFHuMPcDG
snFsBNvDdouinu8lbDJ7RL5Y3Qx1fVldNpbdyaqzP2I+YG1yad6K+WtUjDm2
St14dT1ZLXG96JdN7+tXtpeKKdqPqrtf3Uz9Pdi1bBhry65kF7OxbAubzSaw
u1ktNoLdKz6X/11MYrvki9RNV9eT1WYjWXtWhfViN7BRrAOryv7GerLFcTzW
j01l09mLbCObxS5ni9hzbD17kJVji9nzMVbZUnYZm8WeYMvYPDaejWR72RI2
hp3PhrA1bBIbwUqxcWwbm8smsZGsPVsS90rk59I8G/PtwGyao76LOUjcqD1G
TSf7VtNfnA1la9lkNjKeGTuV1WalYppls9gCdoDtZPcfm+9i3huUTXPU97Yd
RSXtdnFP49vjWl5Uk2Gl5QXte1T7JZazrcBOYD/HeLTvPts/2XvsKTXPifhg
lYz/S/OI9kPqnrT9g73L9utYz/bGfMveYo/He8UOxf/OXmW15cvEw/GOsZfY
VnV3sn+wvqwxK82Ws80xj7KX2Ta2ju2J7zP7SVT0v61hj8S3WP6Guj3qNrDH
4nvF3mZPsI3scfZbgbQWeJJtYk+w39khto+1YiVZI3abqJlL7/P1rJe8t2jE
5rAl7C35m6I0a8ROYeXk5cWVbC57gL0t3+Mcy5xjBpvH/sO2s8VsJpvPXmM7
2KL8dLxCrBa7Xrwgf1BsirVA5Oo2q3uAbWSfs8/i3M47OL7pmTT+YhzGHLCE
rWOfyJ+z7yb7zmYL2etsF1vClrKH2JfsRbaFrWBbYq3AXmHb2Wq2ix1hr7Pd
bBXbyX5gB9ijrA27hHVktdl5rG3MMaxTrCFYMdaEnc0asHKsYKw/WPFYv7Dq
7GzWOuYT1oHVYkVZB1aB9WANWSnWlBXJpOcYz/OAvJ0ox7rJG6i7KNYL7FzW
mFVmp8Q6ghVlTeI5skKxDmAnsOqsOPtD+w52ue1dsS5jF6trz8qz7uxmVpI1
Zmexm9jl7Hg2L54ne4ftZctZC3ZBrGnYNeysY+9kqUwazzGuDx0b55Uz6X2M
9/KjbHon78+kdUCsBwZ55p3YlaxPvM+Od5njrWQ72GH2GnuErWWPsqPsINt7
bG0xNZO+O/H96e14R2Idw3rGPVV31bFxuTuT3r14B6fl0nfr3kxaH8U6qVsu
rZt6ZdIcGXNl51yaO9uxqbFfzIu59D5vyKRxFeNrNLuFZTNpXMX4elzeUpRg
reU1XEth1/JXflq/3pFLa+FYEy9Wt4Z9pO4ZdRvYFWwle5VtY2tjjsymNWOH
XFr3xvo3y1qwceq6qmvNPos1DGvIrmDnyAtk02+H9rm0/ox16OexJmK3xFyl
rkhMoNm0Nm+XS7854rfHB/GNY9epK6nkZPlx8f+x8XHvWFt2KNaKrCorFr9n
5PnZtDbv6Hgt410Rb4rTWCV1RdTlyz8WVbWbxZyo71r7HWQna5dhhfPy/j/B
fxjrH1anQFoLx5r4E1GM1WNl2BnyT+P7yOqzsuzMOJZjdmDTWZ/4rcV+YIez
aT6KtciRGEOijfYkdXer66DuJHYHmxLvM+vETmRt2WTWk3Vkp8S7z2awvqxL
/K+sM5vN7mHd2KnsTjaL9Wd3selsJnuZPcTmsIKsFZvAurN2bBqbEd9ItonN
Zsez1mwi68Has0KsE5vJ+rGu7F1xJqvGzmfHyd8ThVkNdiE7Uf5FrJ3YrawS
O1f+WvzPrBQ7g/0Z1xrvgm1FdiL7Rbuy826zfZ/tZ7vUvBrXyKqwQuy3+L7k
p2uIa3kp3ptYG4it2v9l+/TtVLMgvsvs3RhXbCWbz5ayQ+wxtiI/jcF8Vjbm
sLhu79xCtop9IH9K3Xp1i9hq9iF7mq1j5dly9i+2ha1mFdgK9m+2la1hFdl6
dpDtZg+z9/PT+Ilx9Ia+mjHPibXaH7Nn9W1U840oy1qwauxC+deiDGvOrmYl
8tPv8fhd/gl/XmyRfx/jQ7szr6uunLwOLyD/kD8jNssbxPvLvpIfEDuy6fd4
/C7/Mu652C7/wf7VtLvy+o5XQX5YXM26sHqsfKzf1BaMeTPujdgm/5Jfpn07
r6KuuPwrUTqTxm+M4wvk38Y8xtqy69gl8u/iXsX8F2sGdqm8bsyd8k/5C2Jr
Nn0bz8mkdUWsL6rm0ncgvgfb45skdqn5H466E7A=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0t8rnXEcB/AvNj9mRo0LwzlsXEhHaRdatlLczZVLouWOwu3U2i0lu5yS
2ym5nXJv+QO2MbMZIilJh/nt4PUtF+/n9f6cOs/38zzn1PQNdw5lhRA+SaUS
e6nLNo+zQyhhhknm54TQyDK+YS07+JLdbGO7DOjvOMJhjvEjJznBGU5znnP8
Fr/7IIQrVjv7B5/xsaTlp/mIy3EnrvA/f/GEqzzlb57xXNb0C/7hJf/yiuu8
5r/4XNzgDTe54TkzrDFvsYJFsmTH7+YFLnKWXznFLxznZ37gKAf5nr3skX69
lV1s4ls+52s+ZYq5TLDFezhk0rnFLOdDaZEn5ldxJx5Ic3xHfMF9pu2f0Av1
HT1bfxR/HxbEs5nPRqYkT29gLvekPp4Vd+Muq2idsOVet7RiqPOZMWy63Nz/
Z+4ABTtGlQ==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{755, 1078, 1209, 967, 754, 1210, 968, 756, 1079, 1211, 969, 
       1094, 1080, 1212, 970, 1095, 1201, 1213, 971, 757, 1214, 972, 758, 
       1215, 1104, 1332, 759, 1216, 973, 760, 1217, 974, 761, 1081, 1218, 975,
        1096, 1202, 1219, 976, 1097, 1203, 1220, 977, 762, 1221, 978, 763, 
       1430, 1082, 979, 1083}], 
      Line3DBox[{765, 1105, 1333, 764, 1222, 980, 766, 1084, 1223, 981, 1098, 
       1085, 1224, 982, 1099, 1204, 1225, 983, 767, 1226, 984, 768, 1227, 
       1106, 1334, 769, 1107, 1335, 770, 1228, 985, 771, 1086, 1229, 986, 
       1100, 1205, 1230, 987, 1101, 1206, 1231, 988, 772, 1232, 989, 773, 
       1233, 990, 774}], 
      Line3DBox[{776, 1108, 1336, 775, 1109, 1337, 777, 1234, 991, 778, 1087, 
       1235, 992, 1102, 1432, 1088, 993, 779, 1236, 994, 780, 1237, 1110, 
       1338, 781, 1111, 1339, 782, 1112, 1340, 783, 1238, 995, 784, 1207, 
       1239, 996, 1103, 1433, 1089, 997, 785, 1240, 998, 786, 1241, 999, 
       787}], 
      Line3DBox[{789, 1113, 1341, 788, 1114, 1342, 790, 1115, 1343, 791, 1242,
        1000, 792, 1243, 1001, 793, 1244, 1002, 794, 1245, 1116, 1344, 795, 
       1117, 1345, 796, 1118, 1346, 797, 1119, 1347, 798, 1246, 1003, 799, 
       1247, 1004, 800, 1248, 1005, 801, 1249, 1006, 802}], 
      Line3DBox[{804, 1120, 1348, 803, 1121, 1349, 805, 1122, 1350, 806, 1123,
        1351, 807, 1250, 1007, 808, 1251, 1008, 809, 1252, 1124, 1352, 810, 
       1125, 1353, 811, 1126, 1354, 812, 1127, 1355, 813, 1128, 1356, 814, 
       1253, 1009, 815, 1254, 1010, 816, 1255, 1011, 817}], 
      Line3DBox[{819, 1129, 1357, 818, 1130, 1358, 820, 1131, 1359, 821, 1132,
        1360, 822, 1133, 1361, 823, 1256, 1012, 824, 1257, 1134, 1362, 825, 
       1135, 1363, 826, 1136, 1364, 827, 1137, 1365, 828, 1138, 1366, 829, 
       1139, 1367, 830, 1258, 1013, 831, 1259, 1014, 832}], 
      Line3DBox[{836, 1260, 1015, 834, 1261, 1016, 838, 1262, 1017, 840, 1263,
        1018, 842, 1264, 1019, 844, 1265, 1020, 846, 1267, 1268, 1021, 848, 
       1269, 1022, 850, 1270, 1023, 852, 1271, 1024, 854, 1272, 1025, 856, 
       1273, 1026, 858, 1274, 1027, 860, 1276, 1029, 862}], 
      Line3DBox[{861, 1028, 1275, 859, 1380, 1152, 857, 1379, 1151, 855, 1378,
        1150, 853, 1377, 1149, 851, 1376, 1148, 849, 1375, 1147, 847, 1374, 
       1146, 1266, 845, 1373, 1145, 843, 1372, 1144, 841, 1371, 1143, 839, 
       1370, 1142, 837, 1369, 1141, 833, 1368, 1140, 835}], 
      Line3DBox[{864, 1277, 1030, 863, 1278, 1031, 865, 1279, 1032, 866, 1280,
        1033, 867, 1281, 1034, 868, 1282, 1035, 869, 1283, 1153, 1381, 870, 
       1284, 1036, 871, 1285, 1037, 872, 1286, 1038, 873, 1287, 1039, 874, 
       1288, 1040, 875, 1289, 1041, 876, 1290, 1042, 877}], 
      Line3DBox[{879, 1154, 1382, 878, 1291, 1043, 880, 1292, 1044, 881, 1293,
        1045, 882, 1294, 1046, 883, 1295, 1047, 884, 1296, 1155, 1383, 885, 
       1156, 1384, 886, 1297, 1048, 887, 1298, 1049, 888, 1299, 1050, 889, 
       1300, 1051, 890, 1301, 1052, 891, 1302, 1053, 892}], 
      Line3DBox[{894, 1157, 1385, 893, 1158, 1386, 895, 1303, 1054, 896, 1304,
        1055, 897, 1305, 1056, 898, 1306, 1057, 899, 1307, 1159, 1387, 900, 
       1160, 1388, 901, 1161, 1389, 902, 1308, 1058, 903, 1309, 1059, 904, 
       1310, 1060, 905, 1311, 1061, 906, 1312, 1062, 907}], 
      Line3DBox[{909, 1162, 1390, 908, 1163, 1391, 910, 1164, 1392, 911, 1313,
        1063, 912, 1314, 1064, 913, 1315, 1065, 914, 1316, 1165, 1393, 915, 
       1166, 1394, 916, 1167, 1395, 917, 1168, 1396, 918, 1317, 1066, 919, 
       1318, 1067, 920, 1319, 1068, 921, 1320, 1069, 922}], 
      Line3DBox[{924, 1169, 1397, 923, 1170, 1398, 925, 1171, 1399, 926, 1172,
        1400, 927, 1321, 1070, 928, 1322, 1071, 929, 1323, 1173, 1401, 930, 
       1174, 1402, 931, 1175, 1403, 932, 1176, 1404, 933, 1177, 1405, 934, 
       1324, 1072, 935, 1325, 1073, 936, 1326, 1074, 937}], 
      Line3DBox[{939, 1178, 1406, 938, 1179, 1407, 940, 1180, 1408, 941, 1181,
        1409, 942, 1182, 1410, 943, 1327, 1075, 944, 1328, 1183, 1411, 945, 
       1184, 1412, 946, 1185, 1413, 947, 1186, 1414, 948, 1187, 1415, 949, 
       1188, 1416, 950, 1329, 1076, 951, 1330, 1077, 952}], 
      Line3DBox[{966, 1093, 1092, 1431, 965, 1429, 1200, 964, 1428, 1199, 963,
        1427, 1198, 962, 1426, 1197, 961, 1425, 1196, 960, 1424, 1195, 959, 
       1423, 1194, 1331, 958, 1422, 1193, 957, 1421, 1192, 956, 1420, 1191, 
       955, 1419, 1190, 954, 1418, 1189, 953, 1208, 1417, 1090, 1091}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{293, 512, 1210, 294, 522, 1222, 318, 1337, 533, 333, 1342, 
       544, 348, 1349, 559, 363, 1358, 574, 378, 1369, 589, 1261, 393, 604, 
       1278, 408, 619, 1291, 423, 1386, 634, 438, 1391, 649, 453, 1398, 664, 
       468, 1407, 679, 483, 1418, 694, 498}], 
      Line3DBox[{297, 709, 739, 710, 1213, 298, 719, 745, 720, 1225, 321, 726,
        749, 1432, 727, 336, 547, 1243, 351, 562, 1250, 366, 1361, 577, 381, 
       1372, 592, 1264, 396, 607, 1281, 411, 622, 1294, 426, 637, 1305, 441, 
       652, 1314, 456, 667, 1321, 471, 1410, 682, 486, 1421, 697, 501}], 
      Line3DBox[{299, 514, 1214, 300, 524, 1226, 322, 535, 1236, 337, 548, 
       1244, 352, 563, 1251, 367, 578, 1256, 382, 1373, 593, 1265, 397, 608, 
       1282, 412, 623, 1295, 427, 638, 1306, 442, 653, 1315, 457, 668, 1322, 
       472, 683, 1327, 487, 1422, 698, 502}], 
      Line3DBox[{301, 515, 1215, 303, 525, 1227, 323, 536, 1237, 338, 549, 
       1245, 353, 564, 1252, 368, 579, 1257, 383, 594, 1266, 1267, 398, 609, 
       1283, 413, 624, 1296, 428, 639, 1307, 443, 654, 1316, 458, 669, 1323, 
       473, 684, 1328, 488, 699, 1331, 503}], 
      Line3DBox[{305, 517, 1216, 306, 1335, 527, 325, 1339, 538, 340, 1345, 
       551, 355, 1353, 566, 370, 1363, 581, 385, 1375, 596, 1269, 400, 611, 
       1284, 415, 1384, 626, 430, 1388, 641, 445, 1394, 656, 460, 1402, 671, 
       475, 1412, 686, 490, 1424, 701, 505}], 
      Line3DBox[{307, 518, 1217, 308, 528, 1228, 326, 1340, 539, 341, 1346, 
       552, 356, 1354, 567, 371, 1364, 582, 386, 1376, 597, 1270, 401, 612, 
       1285, 416, 627, 1297, 431, 1389, 642, 446, 1395, 657, 461, 1403, 672, 
       476, 1413, 687, 491, 1425, 702, 506}], 
      Line3DBox[{311, 714, 743, 715, 1220, 312, 724, 748, 725, 1231, 329, 730,
        750, 1433, 731, 344, 555, 1247, 359, 570, 1253, 374, 1367, 585, 389, 
       1379, 600, 1273, 404, 615, 1288, 419, 630, 1300, 434, 645, 1310, 449, 
       660, 1318, 464, 675, 1324, 479, 1416, 690, 494, 1428, 705, 509}], 
      Line3DBox[{313, 520, 1221, 314, 530, 1232, 330, 541, 1240, 345, 556, 
       1248, 360, 571, 1254, 375, 586, 1258, 390, 1380, 601, 1274, 405, 616, 
       1289, 420, 631, 1301, 435, 646, 1311, 450, 661, 1319, 465, 676, 1325, 
       480, 691, 1329, 495, 1429, 706, 510}], 
      Line3DBox[{315, 716, 1430, 717, 316, 531, 1233, 331, 542, 1241, 346, 
       557, 1249, 361, 572, 1255, 376, 587, 1259, 391, 602, 1275, 1276, 406, 
       617, 1290, 421, 632, 1302, 436, 647, 1312, 451, 662, 1320, 466, 677, 
       1326, 481, 692, 1330, 496, 733, 1431, 734, 735}], 
      Line3DBox[{497, 693, 732, 1417, 482, 678, 1406, 467, 663, 1397, 452, 
       648, 1390, 437, 633, 1385, 422, 618, 1382, 407, 1277, 603, 392, 1260, 
       588, 1368, 377, 573, 1357, 362, 558, 1348, 347, 543, 1341, 332, 532, 
       1336, 317, 521, 1333, 292, 1209, 511, 707, 736}], 
      Line3DBox[{499, 695, 1419, 484, 680, 1408, 469, 665, 1399, 454, 650, 
       1392, 439, 1303, 635, 424, 1292, 620, 409, 1279, 605, 394, 1262, 590, 
       1370, 379, 575, 1359, 364, 560, 1350, 349, 545, 1343, 334, 1234, 534, 
       319, 1223, 523, 744, 718, 295, 1211, 513, 738, 708, 737}], 
      Line3DBox[{500, 696, 1420, 485, 681, 1409, 470, 666, 1400, 455, 1313, 
       651, 440, 1304, 636, 425, 1293, 621, 410, 1280, 606, 395, 1263, 591, 
       1371, 380, 576, 1360, 365, 561, 1351, 350, 1242, 546, 335, 1235, 246, 
       320, 1224, 241, 296, 1212, 229, 278, 230}], 
      Line3DBox[{504, 700, 1423, 489, 685, 1411, 474, 670, 1401, 459, 655, 
       1393, 444, 640, 1387, 429, 625, 1383, 414, 610, 1381, 399, 1268, 595, 
       1374, 384, 580, 1362, 369, 565, 1352, 354, 550, 1344, 339, 537, 1338, 
       324, 526, 1334, 304, 516, 1332, 302}], 
      Line3DBox[{507, 703, 1426, 492, 688, 1414, 477, 673, 1404, 462, 658, 
       1396, 447, 1308, 643, 432, 1298, 628, 417, 1286, 613, 402, 1271, 598, 
       1377, 387, 583, 1365, 372, 568, 1355, 357, 553, 1347, 342, 1238, 540, 
       327, 1229, 529, 746, 721, 309, 1218, 519, 741, 711, 740}], 
      Line3DBox[{508, 704, 1427, 493, 689, 1415, 478, 674, 1405, 463, 1317, 
       659, 448, 1309, 644, 433, 1299, 629, 418, 1287, 614, 403, 1272, 599, 
       1378, 388, 584, 1366, 373, 569, 1356, 358, 1246, 554, 343, 1239, 729, 
       728, 328, 1230, 723, 747, 722, 310, 1219, 713, 742, 712, 752, 751, 
       753}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
8AMu1FyIOio/wORN4Qd8qXkOLVR+4P8DKRYiCA==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[0]], HoldForm], TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{361.1022001505083, 221.40254880347516`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.09619140211382747, -3.1932024510135193`, 1.1154395192033766`},
  
  ViewVertical->{0., 0., 1.}]], "Input",
 CellChangeTimes->{3.659214293642017*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.659214297274776*^9, 3.659214297289254*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sol", " ", "=", "   ", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"t", ",", "x"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
           RowBox[{"k", "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"t", ",", "x"}], "]"}], ",", "x", ",", "x"}], 
             "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"t", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{"15", "+", 
            RowBox[{"5", "*", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Pi]", " ", "*", 
               RowBox[{"t", "/", "12"}]}], "]"}]}]}]}], ",", 
          RowBox[{
           RowBox[{
            SuperscriptBox["u", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "1000"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"0", ",", "x"}], "]"}], "\[Equal]", "15"}]}], "}"}], ",", 
        "u", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1000"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"t", ",", "x"}], "]"}], "/.", "Sol"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"3000", "-", "24"}], ",", "3000"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1000"}], "}"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "2", ",", "\"\<k\>\""}], "}"}], ",", "0", ",", 
     "50000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659214312697071*^9, 3.659214314109447*^9}, {
  3.659214392083625*^9, 3.659214436042522*^9}, {3.659214475781126*^9, 
  3.6592144865313396`*^9}, {3.6592145312623377`*^9, 3.659214588708741*^9}, {
  3.659214619608082*^9, 3.659214619757163*^9}, {3.659214696355842*^9, 
  3.65921474002752*^9}, {3.659214801898923*^9, 3.659214855102824*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`k$$], 2, "k"}, 0, 50000}}, Typeset`size$$ = {
    717., {65., 70.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`k$395941$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$395941$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {$CellContext`Sol = NDSolve[{D[
             $CellContext`u[$CellContext`t, $CellContext`x], $CellContext`t] == \
$CellContext`k$$ D[
              $CellContext`u[$CellContext`t, $CellContext`x], $CellContext`x, \
$CellContext`x], $CellContext`u[$CellContext`t, 0] == 
           15 + 5 Sin[Pi ($CellContext`t/12)], 
           Derivative[0, 1][$CellContext`u][$CellContext`t, 1000] == 
           0, $CellContext`u[0, $CellContext`x] == 
           15}, $CellContext`u, {$CellContext`t, 0, 3000}, {$CellContext`x, 0,
            1000}], 
        Plot3D[
         Evaluate[
          ReplaceAll[
           $CellContext`u[$CellContext`t, $CellContext`x], \
$CellContext`Sol]], {$CellContext`t, 3000 - 24, 3000}, {$CellContext`x, 0, 
          1000}, PlotRange -> All, AxesLabel -> Automatic]}, 
      "Specifications" :> {{{$CellContext`k$$, 2, "k"}, 0, 50000}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{762., {109., 114.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.659217762205305*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sol", " ", "=", "   ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"t", ",", "x"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
            
            RowBox[{"k", "*", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"t", ",", "x"}], "]"}], ",", "x", ",", "x"}], 
              "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"t", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"15", "+", 
             RowBox[{"5", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Pi]", " ", "*", 
                RowBox[{"t", "/", "12"}]}], "]"}]}]}]}], ",", 
           RowBox[{
            RowBox[{
             SuperscriptBox["u", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "1000"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"0", ",", "x"}], "]"}], "\[Equal]", "15"}]}], "}"}], ",",
          "u", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1000"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"t", ",", "p"}], "]"}], "/.", "Sol"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"3000", "-", "24"}], ",", "3000"}], "}"}], ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
        RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p", ",", "2", ",", "\"\<Profundidade\>\""}], "}"}], ",", "0", 
      ",", "1000"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.5", "\[Rule]", "\"\<Terra\>\""}], ",", 
        RowBox[{"0.6", "\[Rule]", "\"\<Agua\>\""}], ",", 
        RowBox[{"1.6", "\[Rule]", "\"\<Gelo\>\""}]}], "}"}]}], "}"}]}], "]"}],
   "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.659214919183076*^9, 3.659214920981316*^9}, {
  3.6592151883566847`*^9, 3.65921526655877*^9}, {3.65921536260501*^9, 
  3.659215365074071*^9}, {3.659215748137031*^9, 3.6592158077758827`*^9}, {
  3.659215894721636*^9, 3.6592159318693323`*^9}, {3.659216042309462*^9, 
  3.6592160506964607`*^9}, {3.6592161725457783`*^9, 3.6592162128043823`*^9}, {
  3.65921626677575*^9, 3.659216301940189*^9}, {3.659216365650427*^9, 
  3.659216370177071*^9}, {3.659216401292726*^9, 3.659216410298255*^9}, {
  3.6592164474129763`*^9, 3.659216495585236*^9}, {3.659216965140777*^9, 
  3.6592170286515923`*^9}, {3.6592172099943047`*^9, 3.659217240975801*^9}, {
  3.659217718041103*^9, 3.6592177191116123`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 0.5, $CellContext`p$$ = 114., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`p$$], 2, "Profundidade"}, 0, 1000}, {
      Hold[$CellContext`k$$], {
      0.5 -> "Terra", 0.6 -> "Agua", 1.6 -> "Gelo"}}}, Typeset`size$$ = {
    717., {56., 60.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`p$388330$$ = 
    0, $CellContext`k$388331$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`k$$ = 0.5 -> "Terra", $CellContext`p$$ = 
        2}, "ControllerVariables" :> {
        Hold[$CellContext`p$$, $CellContext`p$388330$$, 0], 
        Hold[$CellContext`k$$, $CellContext`k$388331$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {$CellContext`Sol = NDSolve[{D[
             $CellContext`u[$CellContext`t, $CellContext`x], $CellContext`t] == \
$CellContext`k$$ D[
              $CellContext`u[$CellContext`t, $CellContext`x], $CellContext`x, \
$CellContext`x], $CellContext`u[$CellContext`t, 0] == 
           15 + 5 Sin[Pi ($CellContext`t/12)], 
           Derivative[0, 1][$CellContext`u][$CellContext`t, 1000] == 
           0, $CellContext`u[0, $CellContext`x] == 
           15}, $CellContext`u, {$CellContext`t, 0, 3000}, {$CellContext`x, 0,
            1000}], 
        Plot[
         Evaluate[
          ReplaceAll[
           $CellContext`u[$CellContext`t, $CellContext`p$$], \
$CellContext`Sol]], {$CellContext`t, 3000 - 24, 3000}, PlotRange -> All, 
         AxesLabel -> Automatic]}, 
      "Specifications" :> {{{$CellContext`p$$, 2, "Profundidade"}, 0, 
         1000}, {$CellContext`k$$, {
         0.5 -> "Terra", 0.6 -> "Agua", 1.6 -> "Gelo"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{762., {112., 117.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.659217242077712*^9, {3.659217719625078*^9, 3.659217723833013*^9}, 
   3.659217758035583*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217758698547*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"0.5`\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"u\\\", \
TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \
\\\")\\\"}], Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\
\\\"t\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"15\\\", \\\"+\\\", \
RowBox[{\\\"5\\\", \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217758751794*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177588077583`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"u\\\", \
\\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \\\",\\\", \\\"u\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1000\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217758854665*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217758901863*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000.`\\\"}], \
\\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.`\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"x\\\
\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15.`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"3000.`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"1000.`\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177589509974`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177589947166`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.4902862040817`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217759043297*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"dsvar\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217759085227*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.65921775913785*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.65921776305523*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"0.5`\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"u\\\", \
TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \
\\\")\\\"}], Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\
\\\"t\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"15\\\", \\\"+\\\", \
RowBox[{\\\"5\\\", \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217763129799*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217763348386*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"u\\\", \
\\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \\\",\\\", \\\"u\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1000\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217763399226*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.65921776344774*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000.`\\\"}], \
\\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.`\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"x\\\
\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15.`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"3000.`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"1000.`\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217763489293*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217763529971*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.4902862040817`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217763570307*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"dsvar\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217763681826*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217763709556*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217764538252*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"0.5`\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"u\\\", \
TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \
\\\")\\\"}], Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\
\\\"t\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"15\\\", \\\"+\\\", \
RowBox[{\\\"5\\\", \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217764609955*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217764662368*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"u\\\", \
\\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \\\",\\\", \\\"u\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1000\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217764703765*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217764744467*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000.`\\\"}], \
\\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.`\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"x\\\
\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15.`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"3000.`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"1000.`\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217764787038*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177648251343`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.4902862040817`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217764865467*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"dsvar\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217764905066*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177649533663`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217765683079*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"0.5`\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"u\\\", \
TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \
\\\")\\\"}], Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\
\\\"t\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"15\\\", \\\"+\\\", \
RowBox[{\\\"5\\\", \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217765759869*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177658101273`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"u\\\", \
\\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \\\",\\\", \\\"u\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1000\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177658484383`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217765887637*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000.`\\\"}], \
\\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.`\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"x\\\
\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15.`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"3000.`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"1000.`\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177659272413`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217765970296*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.4902862040817`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217766005509*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"dsvar\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217766048081*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217766096335*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217766679665*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"0.5`\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"u\\\", \
TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \
\\\")\\\"}], Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\
\\\"t\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"15\\\", \\\"+\\\", \
RowBox[{\\\"5\\\", \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217766742248*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217766792334*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"u\\\", \
\\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \\\",\\\", \\\"u\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1000\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177668367567`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217766875536*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000.`\\\"}], \
\\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.`\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"x\\\
\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15.`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"3000.`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"1000.`\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217766922236*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217766959169*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.4902862040817`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217767001335*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"dsvar\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217767039123*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.65921776708792*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217767666912*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"0.5`\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"u\\\", \
TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \
\\\")\\\"}], Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\
\\\"t\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"15\\\", \\\"+\\\", \
RowBox[{\\\"5\\\", \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217767726273*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217767786172*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"u\\\", \
\\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \\\",\\\", \\\"u\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1000\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217767829791*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217767877364*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000.`\\\"}], \
\\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.`\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"x\\\
\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15.`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"3000.`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"1000.`\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217767974969*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177679781446`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.4902862040817`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217768027891*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"dsvar\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217768069766*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217768120284*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177687681723`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"0.5`\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"u\\\", \
TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \
\\\")\\\"}], Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\
\\\"t\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"15\\\", \\\"+\\\", \
RowBox[{\\\"5\\\", \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177688257103`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217768888204*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"u\\\", \
\\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \\\",\\\", \\\"u\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1000\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217768936132*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217768978035*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000.`\\\"}], \
\\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.`\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"x\\\
\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15.`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"3000.`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"1000.`\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217769020018*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217769057897*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.4902862040817`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217769095683*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"dsvar\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217769139923*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177691967087`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217769793124*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"0.5`\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"u\\\", \
TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \
\\\")\\\"}], Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\
\\\"t\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"15\\\", \\\"+\\\", \
RowBox[{\\\"5\\\", \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217769921385*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217770010119*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"u\\\", \
\\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \\\",\\\", \\\"u\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1000\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177700504913`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217770092608*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000.`\\\"}], \
\\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.`\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"x\\\
\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15.`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"3000.`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"1000.`\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177701348248`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177701780033`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.4902862040817`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217770215726*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"dsvar\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217770256915*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177703077793`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217770910996*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{\\\"0.5`\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"u\\\", \
TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \
\\\")\\\"}], Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\
\\\"t\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"15\\\", \\\"+\\\", \
RowBox[{\\\"5\\\", \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1000\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217770975493*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217771035779*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"u\\\", \
\\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"15\\\"}]}], \\\"}\\\"}], \\\",\\\", \\\"u\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"3000\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1000\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217771076138*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.0004902857145`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217771116025*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"0.5`\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Terra\\\\\\\"\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"15.000641782497372`\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"u\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"1000.`\\\"}], \
\\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.`\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"u\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"x\\\
\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"15.`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2976.0004902857145`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"3000.`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"1000.`\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217771155472*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217771201268*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"2976.4902862040817`\\\"}]\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217771245357*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"dsvar\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659217771284184*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6592177713290567`*^9}]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1698, 47, 65, "Input"],
Cell[2281, 71, 9960, 199, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12278, 275, 724, 17, 42, "Input"],
Cell[13005, 294, 69635, 1137, 141, "Output"]
}, Open  ]],
Cell[82655, 1434, 90866, 1489, 236, InheritFromParent],
Cell[173524, 2925, 92, 1, 28, InheritFromParent],
Cell[CellGroupData[{
Cell[173641, 2930, 2592, 68, 84, "Input"],
Cell[176236, 3000, 2348, 47, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178621, 3052, 3259, 82, 124, "Input"],
Cell[181883, 3136, 2765, 56, 246, "Output"],
Cell[184651, 3194, 548, 11, 24, "Message"],
Cell[185202, 3207, 2335, 36, 47, "Message"],
Cell[187540, 3245, 488, 11, 24, "Message"],
Cell[188031, 3258, 2223, 35, 47, "Message"],
Cell[190257, 3295, 486, 11, 24, "Message"],
Cell[190746, 3308, 2245, 36, 48, "Message"],
Cell[192994, 3346, 567, 12, 24, "Message"],
Cell[193564, 3360, 486, 11, 24, "Message"],
Cell[194053, 3373, 563, 12, 24, "Message"],
Cell[194619, 3387, 547, 11, 24, "Message"],
Cell[195169, 3400, 547, 11, 24, "Message"],
Cell[195719, 3413, 2335, 36, 47, "Message"],
Cell[198057, 3451, 486, 11, 24, "Message"],
Cell[198546, 3464, 2223, 35, 47, "Message"],
Cell[200772, 3501, 485, 11, 24, "Message"],
Cell[201260, 3514, 2243, 36, 48, "Message"],
Cell[203506, 3552, 565, 12, 24, "Message"],
Cell[204074, 3566, 486, 11, 24, "Message"],
Cell[204563, 3579, 563, 12, 24, "Message"],
Cell[205129, 3593, 548, 11, 24, "Message"],
Cell[205680, 3606, 548, 11, 24, "Message"],
Cell[206231, 3619, 2335, 36, 47, "Message"],
Cell[208569, 3657, 486, 11, 24, "Message"],
Cell[209058, 3670, 2223, 35, 47, "Message"],
Cell[211284, 3707, 486, 11, 24, "Message"],
Cell[211773, 3720, 2243, 36, 48, "Message"],
Cell[214019, 3758, 567, 12, 24, "Message"],
Cell[214589, 3772, 486, 11, 24, "Message"],
Cell[215078, 3785, 563, 12, 24, "Message"],
Cell[215644, 3799, 550, 11, 24, "Message"],
Cell[216197, 3812, 548, 11, 24, "Message"],
Cell[216748, 3825, 2335, 36, 47, "Message"],
Cell[219086, 3863, 488, 11, 24, "Message"],
Cell[219577, 3876, 2225, 35, 47, "Message"],
Cell[221805, 3913, 486, 11, 24, "Message"],
Cell[222294, 3926, 2245, 36, 48, "Message"],
Cell[224542, 3964, 565, 12, 24, "Message"],
Cell[225110, 3978, 486, 11, 24, "Message"],
Cell[225599, 3991, 563, 12, 24, "Message"],
Cell[226165, 4005, 548, 11, 24, "Message"],
Cell[226716, 4018, 548, 11, 24, "Message"],
Cell[227267, 4031, 2335, 36, 47, "Message"],
Cell[229605, 4069, 486, 11, 24, "Message"],
Cell[230094, 4082, 2225, 35, 47, "Message"],
Cell[232322, 4119, 486, 11, 24, "Message"],
Cell[232811, 4132, 2243, 36, 48, "Message"],
Cell[235057, 4170, 565, 12, 24, "Message"],
Cell[235625, 4184, 486, 11, 24, "Message"],
Cell[236114, 4197, 563, 12, 24, "Message"],
Cell[236680, 4211, 547, 11, 24, "Message"],
Cell[237230, 4224, 548, 11, 24, "Message"],
Cell[237781, 4237, 2335, 36, 47, "Message"],
Cell[240119, 4275, 486, 11, 24, "Message"],
Cell[240608, 4288, 2223, 35, 47, "Message"],
Cell[242834, 4325, 486, 11, 24, "Message"],
Cell[243323, 4338, 2243, 36, 48, "Message"],
Cell[245569, 4376, 567, 12, 24, "Message"],
Cell[246139, 4390, 486, 11, 24, "Message"],
Cell[246628, 4403, 563, 12, 24, "Message"],
Cell[247194, 4417, 548, 11, 24, "Message"],
Cell[247745, 4430, 550, 11, 24, "Message"],
Cell[248298, 4443, 2337, 36, 47, "Message"],
Cell[250638, 4481, 486, 11, 24, "Message"],
Cell[251127, 4494, 2223, 35, 47, "Message"],
Cell[253353, 4531, 486, 11, 24, "Message"],
Cell[253842, 4544, 2243, 36, 48, "Message"],
Cell[256088, 4582, 565, 12, 24, "Message"],
Cell[256656, 4596, 486, 11, 24, "Message"],
Cell[257145, 4609, 563, 12, 24, "Message"],
Cell[257711, 4623, 550, 11, 24, "Message"],
Cell[258264, 4636, 548, 11, 24, "Message"],
Cell[258815, 4649, 2335, 36, 47, "Message"],
Cell[261153, 4687, 486, 11, 24, "Message"],
Cell[261642, 4700, 2225, 35, 47, "Message"],
Cell[263870, 4737, 486, 11, 24, "Message"],
Cell[264359, 4750, 2245, 36, 48, "Message"],
Cell[266607, 4788, 567, 12, 24, "Message"],
Cell[267177, 4802, 486, 11, 24, "Message"],
Cell[267666, 4815, 563, 12, 24, "Message"],
Cell[268232, 4829, 550, 11, 24, "Message"],
Cell[268785, 4842, 548, 11, 24, "Message"],
Cell[269336, 4855, 2335, 36, 47, "Message"],
Cell[271674, 4893, 486, 11, 24, "Message"],
Cell[272163, 4906, 2223, 35, 47, "Message"],
Cell[274389, 4943, 486, 11, 24, "Message"],
Cell[274878, 4956, 2243, 36, 48, "Message"],
Cell[277124, 4994, 565, 12, 24, "Message"],
Cell[277692, 5008, 486, 11, 24, "Message"],
Cell[278181, 5021, 563, 12, 24, "Message"],
Cell[278747, 5035, 550, 11, 24, "Message"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
